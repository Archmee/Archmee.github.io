<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Archmee</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://archmee.github.io/"/>
  <updated>2016-08-13T13:10:25.172Z</updated>
  <id>http://archmee.github.io/</id>
  
  <author>
    <name>archmee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>前端之旅第 35~40 天</title>
    <link href="http://archmee.github.io/201608/2016-08-13.html"/>
    <id>http://archmee.github.io/201608/2016-08-13.html</id>
    <published>2016-08-12T16:00:00.000Z</published>
    <updated>2016-08-13T13:10:25.172Z</updated>
    
    <content type="html">&lt;p&gt;在8.12完成了百度前端学院&lt;a href=&quot;https://github.com/baidu-ife/ife/tree/master/2015_spring/task/task0001&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;春季的第一个任务的第7个整站的大作业&lt;/a&gt;，今天来写点日志，现在已经感觉对盒子模型和布局理解更深入一点了。&lt;/p&gt;
&lt;p&gt;-&amp;gt;&lt;a href=&quot;https://github.com/Archmee/Front-End-Demo/tree/master/ife_task_007&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这是项目的github地址&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;已解决问题&quot;&gt;&lt;a href=&quot;#已解决问题&quot; class=&quot;headerlink&quot; title=&quot;已解决问题&quot;&gt;&lt;/a&gt;已解决问题&lt;/h2&gt;&lt;p&gt;这些已解决问题或记录，只是自己在遇到时随手记下来的，并且贴出了解决办法，并没有把每个问题的表现形式截图下来，问题和解决方式的描述也还有待调整，我争取看看有时间的时候完善补充一下。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;当a嵌入一个img时，a元素的高度和img不一样？（ 转自：&lt;a href=&quot;http://www.zhangxinxu.com/wordpress/2015/08/css-deep-understand-vertical-align-and-line-height）&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.zhangxinxu.com/wordpress/2015/08/css-deep-understand-vertical-align-and-line-height）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; 这是 line-height 和 vertical-align 造成的，被称为幽灵空白节点，解决方案有以下几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;让 vertical-align 失效：&lt;code&gt;img { display: block; }&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;vertical-align 默认为 baseline，更改为其他即可：&lt;code&gt;img { vertical-align:middle; }&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;直接修改 line-height 值：&lt;code&gt;a { line-height: 5px; }&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;修改 font-size：&lt;code&gt;a { font-size: 0; }&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;做banner的背景时找到一个新的css 3属性&lt;br&gt; &lt;code&gt;background-size: 100% 100%;&lt;/code&gt;，这样就可以控制背景图片的大小适应整个盒子&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关于背景透明，文字不透明，解决方案 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;两个DIV放在一个位置，文字DIV放上面，需要透明的DIV放下面&lt;/li&gt;
&lt;li&gt;使用css属性opacity（文字背景都透明）或者rgba（背景透明文字不透明），参考：&lt;a href=&quot;http://www.cnblogs.com/PeunZhang/p/4089894.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/PeunZhang/p/4089894.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;font-family应该优先指定英文字体，然后再指定中文字体。同时声明中文字体的字体名称（英文）和显示名称（中文）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关于li元素之间的间隔，是inline-block导致的，之前遇到过这个问题，也在博客中提过，是用&lt;code&gt;display:table-cell;&lt;/code&gt;解决的，但是我发现它和最上面的问题一有点类似，采用&lt;code&gt;vertical-align:middle;&lt;/code&gt;也解决了问题，仔细检查发现虽然间隔小了很多但还是有一点间隔。所以还是采用&lt;code&gt;font-size:0;&lt;/code&gt;的方式解决了，其实浮动应该可以。&lt;br&gt; 在写表单的时候，若多个表单元素放在一行的话，也会出现间隔，用 letter-spacing 可以解决&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;了解word-wrap和word-break&lt;br&gt;一下内容来自这篇博客：www.cnblogs.com/2050/archive/2012/08/10/2632256.html。&lt;/p&gt;
&lt;p&gt; &lt;code&gt;word-wrap:break-word;&lt;/code&gt; 对长串英文不起作用，其实这是非常错误的，&lt;code&gt;word-wrap:break-word;&lt;/code&gt;照样能把一个长串英文或数字拆成多行。事实上，&lt;code&gt;word-wrap:break-word;&lt;/code&gt;与&lt;code&gt;word-break:break-all;&lt;/code&gt;共同点是都能把长单词强行断句，不同点是&lt;code&gt;word-wrap:break-word;&lt;/code&gt;会首先起一个新行来放置长单词，新的行还是放不下这个长单词则会对长单词进行强制断句；而&lt;code&gt;word-break:break-all;&lt;/code&gt;则不会把长单词放在一个新行里，当这一行放不下的时候就直接强制断句了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;页面底部采用text-align来居中，版权信息可以正常显示，但是github logo总是不居中，检查它的左边刚好在居中位置，所以采用了&lt;code&gt;margin-left: -50%;&lt;/code&gt; 将图片向左边缩进了自身宽度的边距&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;屏幕宽度小于980px就隐藏头部github图标&lt;/p&gt;
 &lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;at_rule&quot;&gt;@&lt;span class=&quot;keyword&quot;&gt;media&lt;/span&gt; screen and (max-width: &lt;span class=&quot;number&quot;&gt;980px&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;id&quot;&gt;#github-icon&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; none&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;之前主页的封面图是用背景来实现的，但是实际图片宽高大于盒子宽高，所以图片显示不完整，在网上找到解决方法是可以用background-size来缩放背景大小，我分别指定宽高为100%，就能适应盒子 大小了。&lt;br&gt;本来以为没问题了，但是今天在缩放窗口的时候发现，图片宽度会随着浏览器窗口调整导致挤压变形严重，在MDN看到一篇介绍background-size的文章，提到还有&lt;strong&gt;contain&lt;/strong&gt;和&lt;strong&gt;cover&lt;/strong&gt;属性可用，contain是按照原图宽高比例进行缩放，只要宽度发生变化，图片高度也会动态调整，这不是我期望的效果，而cover属性就能够填充整个盒子的宽高，并不会随着浏览器缩放调整大小，所以完美解决了这个问题&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;底部图标居中并底部对齐的问题，对copyright使用text-align:center可以居中，但是不能定位到底部，除非精确计算图标到版权文字的距离，但是不提倡这种硬编码方式。&lt;/p&gt;
&lt;p&gt;刚开始的时候我直接对a元素绝对定位，并且对齐了底部，当然还要对copyright这个div设置相对定位，结果发现它居中的位置是图标的左边位置，所以对img采用了margin-left:-50%使其居中，刚开始看没问题，但是发现和ie不兼容，因为text-align:center根本没有对a+img元素生效，所以图标在浏览器窗口最左边并且使用了img的负边距，所以图标只有右边一半可见。而且这种实现就是，a元素应该在的位置是可点击的，采用负边距后，导致a元素变成了原来宽度加上img的偏移位置，这样可点击的区域也变大了，所以这种方式不是很好。&lt;br&gt;然后我给a元素外面嵌套了一层div.icon，对其使用绝对定位和50%的left，a元素就都到中间偏右一点的位置去了，当然还是以img撑开的a元素的左边进行定位的，所以要对之前在img上使用的负边距使用到a上，不过这次不使用margin了，而是对a进行相对定位以及-50%的left，perfect！！！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;让整个块区域都是可点击区域，只需要把a样式设置为内联块，并且指定宽高就行（padding也可以）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;禁用链接 可对相关a元素使用 pointer-events: none; 但是IE9不兼容，可以添加disabled属性，对IE9有效&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;outline 设置a元素或者input元素等在聚焦时候的默认边框&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;注意在设置text input和submit input的大小时的区别，因为text input大小和其他盒子模型一样，真正宽高=设置的宽高+padding+margin+border，而submit input就不一样了，他的宽高=你设置的宽高+margin=可见区域+padding+border+margin。&lt;br&gt;用另一种方式来说就是，你设置的text input的宽高并不包括内边距和边框，而submit input的宽高则包括内边距和边框，注意我们讨论的区别都不包括margin，因为margin在其两者上表现上是相同的。&lt;br&gt;type=”button”和type=”submit”效果一样， type=”text” 和type=”password”效果一样&lt;br&gt;解决方式有两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一种 是单独设置宽高，使其达到理想的盒子模型&lt;/li&gt;
&lt;li&gt;第二种 是使用css3属性box-sizing: content-box;设置盒子的大小控制方式，content-box就是可以让该盒子和其他盒子一样，指定的宽高不包括padding、border、margin等，而border-box就是默认的表现，padding、border都在指定的宽高内进行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;请看问题#14，在左右两个input元素高度一致时，左右不能对齐，就是不在同一条水平线上&lt;br&gt;已解决，办法是设置vertical-align为一个除了baseline外的值即可，可能还是跟inline-block元素的表现有关&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;默认字间距为2像素（只是目测了Chrome ^,^）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在写project.html页面时，在a元素中嵌入div，用作在鼠标经过图片时，弹出隐藏的文字框，显示文字部分有背景，在完全使用css的情况下，div和a元素盒子一样大小，需要显示的文字要底部对齐，用 &lt;code&gt;a div:hover&lt;/code&gt;来实现选择元素，在正常时，将文字和用text-indent隐藏，而hover时，添加背景和显示文字，并且用渐变方式实现背景(可以指定位置)，但是ie不兼容，文字和渐变背景都没有，然后我给盒子加了一个非渐变的默认背景，但是这样就是hover时整个盒子都有背景了，虽然不理想，但是不想为兼容性浪费太多时间，背景就先这样。&lt;br&gt;然后我又先后使用了&lt;code&gt;font-size:0;&lt;/code&gt;到&lt;code&gt;font-size:1em;&lt;/code&gt;，以及&lt;code&gt;opacity:1;&lt;/code&gt;到&lt;code&gt;opacity:0;&lt;/code&gt;达到隐藏显示文字的目的，但是ie仍不兼容，除了opacity能够在鼠标hover到文字上时可以达到效果，但是如果鼠标在div的非文字区域，就还是识别不到hover。&lt;br&gt;经过google，找到和我之前不一样的设置hover的方式，&lt;code&gt;a:hover div&lt;/code&gt; 选中元素，注意它是把hover添加到了a上，所以现在ie和其他浏览器都兼容了，甚至可以指定盒子不用完全和a一样大了，而指定自己想要的高度即可，这样我也可以不使用渐变背景来达到文字区域的背景了，ie也ok&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在project.html页面的瀑布流布局那里，a元素嵌入img和一个div，a和img都是inline-block的框，但是a元素始终没有img高，始终会少1px左右，虽然网上的方案都是像问题#1一样解决的，但是这里，只有问题1的第一种方法&lt;code&gt;img{ display:block ;}&lt;/code&gt; 才有效果，暂时不知道什么原因&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;待解决问题&quot;&gt;&lt;a href=&quot;#待解决问题&quot; class=&quot;headerlink&quot; title=&quot;待解决问题&quot;&gt;&lt;/a&gt;待解决问题&lt;/h2&gt;&lt;p&gt;其实看了百度学院老师review其他人的代码，发现自己也犯了几个同样的问题，需要对代码进行调整。目前已知的有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;右上角github icon是背景方式呈现，不需要img标签，并且在a元素中包含说明文字，底部图标一样&lt;/li&gt;
&lt;li&gt;底部link列表应该用dl而不是ul&lt;/li&gt;
&lt;li&gt;项目相关的图片和css使用到的图标应该分开放置，方便以后做cdn之类的&lt;/li&gt;
&lt;li&gt;日历并不是链接，没有可点击的事件，不需要使用a标签&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不过都是些小问题，马上就可以调整好了。接下来会看下css和html代码规范，看还有没需要修改的或者语义不正确的地方。&lt;/p&gt;
&lt;h2 id=&quot;截图&quot;&gt;&lt;a href=&quot;#截图&quot; class=&quot;headerlink&quot; title=&quot;截图&quot;&gt;&lt;/a&gt;截图&lt;/h2&gt;&lt;p&gt;上一次更新日志是前两个页面，现在放后面两个页面的截图:&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Archmee/lkd2d97zvb5fvz89feyhwr98v/master/gitblog/images/2016-08-12_215651.jpg&quot; alt=&quot;项目&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Archmee/lkd2d97zvb5fvz89feyhwr98v/master/gitblog/images/2016-08-12_215731.jpg&quot; alt=&quot;关于&quot;&gt;&lt;/p&gt;
&lt;p&gt;–END–&lt;br&gt;假装有彩蛋&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在8.12完成了百度前端学院&lt;a href=&quot;https://github.com/baidu-ife/ife/tree/master/2015_spring/task/task0001&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;春季的第一个任务的第7
    
    </summary>
    
      <category term="tech" scheme="http://archmee.github.io/categories/tech/"/>
    
    
      <category term="Front End" scheme="http://archmee.github.io/tags/Front-End/"/>
    
  </entry>
  
  <entry>
    <title>前端之旅第 24~34 天</title>
    <link href="http://archmee.github.io/201608/2016-0729-0808.html"/>
    <id>http://archmee.github.io/201608/2016-0729-0808.html</id>
    <published>2016-08-08T14:00:00.000Z</published>
    <updated>2016-08-09T06:14:49.758Z</updated>
    
    <content type="html">&lt;p&gt;最近不更新博客是因为“忙于”完成百度前端春季学院的大作业，可以从标题看出来，已经花了10天了，才完成前2个页面——摔！当然，投入和产出是成正比的，在完成后面的任务时我也在不断的对前面的代码进行“微调”以保证项目的统一性，所以修修改改了好多。不能每天都能全身心投入原因还有，有时候还要为生计烦劳，诸如一个人吃饭，该吃什么呢，自己做呢，还是点外卖呢，外卖又贵，自己做又要浪费几个小时，心塞！&lt;/p&gt;
&lt;p&gt;前面虽然有博客列了个人计划，但是现在看来计划已经被打破了，所以真是计划赶不上变化！&lt;/p&gt;
&lt;p&gt;下面是自己完成的2个页面截图，个人认为还原度还是很高的，完成后会放出github地址&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Archmee/lkd2d97zvb5fvz89feyhwr98v/master/gitblog/images/2016-08-08-index-html.jpg&quot; alt=&quot;首页&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Archmee/lkd2d97zvb5fvz89feyhwr98v/master/gitblog/images/2016-08-08_blog-html.jpg&quot; alt=&quot;文章&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近不更新博客是因为“忙于”完成百度前端春季学院的大作业，可以从标题看出来，已经花了10天了，才完成前2个页面——摔！当然，投入和产出是成正比的，在完成后面的任务时我也在不断的对前面的代码进行“微调”以保证项目的统一性，所以修修改改了好多。不能每天都能全身心投入原因还有，有
    
    </summary>
    
      <category term="tech" scheme="http://archmee.github.io/categories/tech/"/>
    
    
      <category term="Front End" scheme="http://archmee.github.io/tags/Front-End/"/>
    
  </entry>
  
  <entry>
    <title>圣杯布局和双飞翼布局</title>
    <link href="http://archmee.github.io/201608/2016-08-08.html"/>
    <id>http://archmee.github.io/201608/2016-08-08.html</id>
    <published>2016-08-08T12:00:00.000Z</published>
    <updated>2016-08-09T06:32:14.360Z</updated>
    
    <content type="html">&lt;p&gt;圣杯布局和双飞翼布局在前面的步骤都是一样的，只是最后的步骤有点区别，且看&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;html结构&lt;/p&gt;
 &lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;page&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;header&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;header&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;main&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;main&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;left&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;left&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;right&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;right&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;footer&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;footer&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 这里的重点在content区域，由于遵循主要内容main优先渲染，所以放在三列布局的前面&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;基础样式&lt;/p&gt;
 &lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;id&quot;&gt;#header&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;30px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;hexcolor&quot;&gt;#ddd&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;id&quot;&gt;#content&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;hexcolor&quot;&gt;#fff&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;id&quot;&gt;#footer&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;30px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;hexcolor&quot;&gt;#ddd&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;.main&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;min-height&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt;  &lt;span class=&quot;number&quot;&gt;100px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; red&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;.left&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;min-height&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt;  &lt;span class=&quot;number&quot;&gt;100px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;190px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; green&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;.right&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;min-height&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt;  &lt;span class=&quot;number&quot;&gt;100px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;190px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; blue&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 我们给了点基本样式，其中重点header和footer可以忽略不计，我们重点看三列布局的区域&lt;br&gt; &lt;img src=&quot;https://raw.githubusercontent.com/Archmee/lkd2d97zvb5fvz89feyhwr98v/master/gitblog/images/12-53-32.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt; 另外两列都按照流的方式正常流入了页面，不过并不是我们期望的效果&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加浮动&lt;br&gt; 给三列布局的样式分别添加浮动&lt;code&gt;float: left;&lt;/code&gt;，并且在footer样式上清除浮动&lt;code&gt;clear: both;&lt;/code&gt;，效果如下：&lt;br&gt; &lt;img src=&quot;https://raw.githubusercontent.com/Archmee/lkd2d97zvb5fvz89feyhwr98v/master/gitblog/images/13-01-38.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt; 可以看出，由于main区域的宽度是100%，所以还是把另外两列撑下来了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用负边距&lt;br&gt; 使用负边距可以让另外两列和main区域处于同一水平位置，我们给left和right分别添加负边距&lt;/p&gt;
 &lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;.left&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;marin-left&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; -&lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;.right&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;margin-right&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; -&lt;span class=&quot;number&quot;&gt;190px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 给 left -100%的边距是为了让它缩进一行，回到上一行并且完全靠在左边位置，而right的负边距是自身的宽度，也就是等left离开后，它会完全靠在左边，在缩进自身宽度的负边距，就回到上一行，并且完全靠右。效果如下：&lt;br&gt; &lt;img src=&quot;https://raw.githubusercontent.com/Archmee/lkd2d97zvb5fvz89feyhwr98v/master/gitblog/images/13-09-41.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt; perfect！！！但是，遗憾的是，虽然这两个回去了，main非常霸道，他居然没给人家让位置，所以另外两个小兄弟就以牙还牙的坐到main的身上，所以，现在看起来，main的左右都被遮住了。&lt;br&gt; 其实按照我们正常布局逻辑的话，左中右三列布局很容易就实现了，但是现在main优先的结构导致了更复杂的实现。&lt;/p&gt;
&lt;p&gt; 接下来也就是圣杯布局和双飞翼布局的分水岭了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;圣杯布局&lt;br&gt;圣杯布局的思想是，既然main被困在下面出不来，那么我们是否可以给content区内边距，把他挤到中间可见区域来。&lt;br&gt;然后我们给了content一个padding。&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;id&quot;&gt;#content&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;190px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; &lt;img src=&quot;https://raw.githubusercontent.com/Archmee/lkd2d97zvb5fvz89feyhwr98v/master/gitblog/images/13-29-26.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt; 但是left和right似乎不领情，仍然狠狠压着main，原因是left和right都被content包裹着，所以content有什么动静他们都一清二楚，在content的苦苦劝说下，left和right才答应挪出一点位置给main：&lt;/p&gt;
 &lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;class&quot;&gt;.left&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; relative&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; -&lt;span class=&quot;number&quot;&gt;190px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;/*left左移*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;.right&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; relative&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;right&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; -&lt;span class=&quot;number&quot;&gt;190px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;/*right右移*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; &lt;img src=&quot;https://raw.githubusercontent.com/Archmee/lkd2d97zvb5fvz89feyhwr98v/master/gitblog/images/13-37-02.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt; 现在已经达到我们期望的方式了，下面是我们的整个圣杯布局的css：&lt;/p&gt;
 &lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;id&quot;&gt;#header&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;30px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;hexcolor&quot;&gt;#ddd&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;id&quot;&gt;#content&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;hexcolor&quot;&gt;#fff&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;190px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;id&quot;&gt;#footer&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;clear&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; both&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;30px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;hexcolor&quot;&gt;#ddd&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;.main&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;float&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; left&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;min-height&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt;  &lt;span class=&quot;number&quot;&gt;100px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; red&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;.left&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;float&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; left&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;min-height&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt;  &lt;span class=&quot;number&quot;&gt;100px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;190px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;margin-left&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; -&lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; green&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; relative&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; -&lt;span class=&quot;number&quot;&gt;190px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;.right&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;float&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; left&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;min-height&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt;  &lt;span class=&quot;number&quot;&gt;100px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;190px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;margin-left&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; -&lt;span class=&quot;number&quot;&gt;190px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; blue&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; relative&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;right&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; -&lt;span class=&quot;number&quot;&gt;190px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 那么下面来看，面对同样的问题，双飞翼布局是怎么处理的？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;双飞翼布局&lt;br&gt; &lt;img src=&quot;https://raw.githubusercontent.com/Archmee/lkd2d97zvb5fvz89feyhwr98v/master/gitblog/images/13-09-41.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt; 我们随图片可以看到问题重现，main区域被遮盖了，淘宝的玉伯大侠提出了处理起来更简单的双飞翼布局的方案。&lt;br&gt; 双飞翼布局的思路是，首先要增加一点html，在原main中嵌入一个div包裹原来main包裹的内容，然后给内嵌的div一个左右边距，就达到目的了，现在html看起来是这样：&lt;/p&gt;
 &lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;page&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;header&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;header&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;main&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;in-main&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;main&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;left&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;left&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;right&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;right&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;footer&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;footer&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 回到第5步实现圣杯布局之前的css，是这样：&lt;/p&gt;
 &lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;id&quot;&gt;#header&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;30px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;hexcolor&quot;&gt;#ddd&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;id&quot;&gt;#content&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;hexcolor&quot;&gt;#fff&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;			&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;id&quot;&gt;#footer&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;clear&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; both&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;30px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;hexcolor&quot;&gt;#ddd&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;.main&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;float&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; left&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;min-height&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt;  &lt;span class=&quot;number&quot;&gt;100px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; red&lt;/span&gt;&lt;/span&gt;;			&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;.left&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;float&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; left&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;min-height&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt;  &lt;span class=&quot;number&quot;&gt;100px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;190px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;margin-left&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; -&lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; green&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;.right&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;float&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; left&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;min-height&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt;  &lt;span class=&quot;number&quot;&gt;100px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;190px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;margin-left&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; -&lt;span class=&quot;number&quot;&gt;190px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; blue&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 现在我们只需要在此基础上给新增的in-main增加一行样式足矣：&lt;/p&gt;
 &lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;class&quot;&gt;.in-main&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;190px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 现在看看我们的效果，如图：&lt;br&gt; &lt;img src=&quot;https://raw.githubusercontent.com/Archmee/lkd2d97zvb5fvz89feyhwr98v/master/gitblog/images/14-07-34.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt; 也很完美的解决了问题，而且使用了更少的样式，而且从上面可以很容易的看出这两种布局的区别。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;圣杯布局和双飞翼布局在前面的步骤都是一样的，只是最后的步骤有点区别，且看&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;html结构&lt;/p&gt;
 &lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span 
    
    </summary>
    
      <category term="tech" scheme="http://archmee.github.io/categories/tech/"/>
    
    
      <category term="Front End" scheme="http://archmee.github.io/tags/Front-End/"/>
    
  </entry>
  
  <entry>
    <title>前端之旅第 21~23 天</title>
    <link href="http://archmee.github.io/201607/2016-07-26-28.html"/>
    <id>http://archmee.github.io/201607/2016-07-26-28.html</id>
    <published>2016-07-27T16:00:00.000Z</published>
    <updated>2016-07-29T06:26:30.367Z</updated>
    
    <content type="html">&lt;h2 id=&quot;维基大学的Challenge-5&quot;&gt;&lt;a href=&quot;#维基大学的Challenge-5&quot; class=&quot;headerlink&quot; title=&quot;维基大学的Challenge 5&quot;&gt;&lt;/a&gt;维基大学的Challenge 5&lt;/h2&gt;&lt;p&gt;完成了维基大学的Challenge 5，后面的挑战我不打算继续了，第6个是自己设计，第7个是模仿静态网页、第8个是CSS Zen Garden的学习。&lt;br&gt;在做Challenge 5的时候看了两篇分别介绍 &lt;a href=&quot;http://www.456bereastreet.com/lab/developing_with_web_standards/csslayout/2-col/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;2列布局&lt;/a&gt; 和 &lt;a href=&quot;http://www.456bereastreet.com/archive/201012/how_to_create_a_3-column_layout_with_css/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;3列布局&lt;/a&gt;的博客，不过方法都差不多，都是使用浮动来实现&lt;/p&gt;
&lt;script async src=&quot;https://jsfiddle.net/ym24ukus/6/embed/html,css,result/&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;读《精通CSS》&quot;&gt;&lt;a href=&quot;#读《精通CSS》&quot; class=&quot;headerlink&quot; title=&quot;读《精通CSS》&quot;&gt;&lt;/a&gt;读《精通CSS》&lt;/h2&gt;&lt;p&gt;开始看《精通CSS》，已经完成1、2章，笔记整理如下&lt;/p&gt;
&lt;h3 id=&quot;1-基础知识&quot;&gt;&lt;a href=&quot;#1-基础知识&quot; class=&quot;headerlink&quot; title=&quot;1. 基础知识&quot;&gt;&lt;/a&gt;1. 基础知识&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;有意义的标记为开发人员提供了几个重要的好处，&lt;ul&gt;
&lt;li&gt;与表现性的页面相比，有意义的页面更容易处理&lt;/li&gt;
&lt;li&gt;除了人之外，程序和其他设备也可以理解有意义的标记&lt;/li&gt;
&lt;li&gt;有意义的标记可以简便地将元素调整为你所需要的样式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;为元素命名class或id时，应该根据“它们是什么”来为元素命名&lt;/li&gt;
&lt;li&gt;class或id区分大小写&lt;/li&gt;
&lt;li&gt;只有在绝对确定这个元素之会出现一次的情况下，才应该使用ID&lt;/li&gt;
&lt;li&gt;为了将不必要的标记减到最少，应该只在没有现有元素能够实现区域分割的情况下使用div元素&lt;/li&gt;
&lt;li&gt;DTD是一组机器可读的规则，它们定义XML或HTML的特定版本中允许有什么，不允许有什么。在解析网页时，浏览器将使用这些规则检查页面的&lt;strong&gt;有效性&lt;/strong&gt;并且采取相应的措施。浏览器通过分析页面的DOCTYPE声明来了解要使用哪个DTD，由此知道要使用HTML的哪个版本。&lt;/li&gt;
&lt;li&gt;DOCTYPE有两种风格：&lt;strong&gt;严格&lt;/strong&gt;（strict）和&lt;strong&gt;过渡&lt;/strong&gt;（transitional）&lt;/li&gt;
&lt;li&gt;当浏览器厂商开始创建于标准兼容的浏览器时，他们希望确保向后兼容性。为了实现这一点，他们创建了两种呈现模式：&lt;strong&gt;标准模式&lt;/strong&gt;和&lt;strong&gt;混杂模式&lt;/strong&gt;。在标准模式中，浏览器根据规范呈现页面；在混杂模式中页面以一种比较宽松的向后兼容的方式显示。&lt;/li&gt;
&lt;li&gt;DOCTYPE切换是浏览器用来区分遗留文档和符合标准的文档的手段&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2-为样式找到应用目标&quot;&gt;&lt;a href=&quot;#2-为样式找到应用目标&quot; class=&quot;headerlink&quot; title=&quot;2. 为样式找到应用目标&quot;&gt;&lt;/a&gt;2. 为样式找到应用目标&lt;/h3&gt;&lt;h4 id=&quot;选择器&quot;&gt;&lt;a href=&quot;#选择器&quot; class=&quot;headerlink&quot; title=&quot;选择器&quot;&gt;&lt;/a&gt;选择器&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;类型选择器有时候也称为元素选择器或简单选择器，用来寻找特定类型的元素。&lt;/li&gt;
&lt;li&gt;后代选择器可用来寻找特定元素或元素组的后代，&lt;code&gt;ul li {}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;不要给太多元素指定不同的类，而应将一个类或ID应用于它们的祖先，然后使用后代选择器定位它们。&lt;/li&gt;
&lt;li&gt;伪类选择器可以根据文档结构之外的其他条件对元素应用样式。&lt;code&gt;:link&lt;/code&gt;和&lt;code&gt;:visited&lt;/code&gt;称为链接伪类，只能应用于锚元素，&lt;code&gt;:hover&lt;/code&gt;和&lt;code&gt;:active&lt;/code&gt;和&lt;code&gt;:focus&lt;/code&gt;称为动态伪类，理论上可以应用于任何元素。通过把伪类连接在一起，可以创建更复杂的行为&lt;/li&gt;
&lt;li&gt;通用选择器用一个&lt;code&gt;*&lt;/code&gt;号表示，一般用来对页面上所有元素应用样式。&lt;/li&gt;
&lt;li&gt;高级选择器&lt;ul&gt;
&lt;li&gt;子选择器：只选择元素的直接后代，即子元素&lt;code&gt;p &amp;gt; span{}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;相邻同胞选择器：可用于定位同一个父元素下某个元素相邻的元素。&lt;code&gt;h2 + p{}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;属性选择器：可以根据某个属性是否存在&lt;code&gt;img[title] {}&lt;/code&gt;，或属性的值来寻找元素&lt;code&gt;img[title=china] {}&lt;/code&gt;，关于更多使用属性值来寻找元素的方法可以查看W3School的教程&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;层叠&quot;&gt;&lt;a href=&quot;#层叠&quot; class=&quot;headerlink&quot; title=&quot;层叠&quot;&gt;&lt;/a&gt;层叠&lt;/h4&gt;&lt;p&gt;作者的样式表是由站点的开发者编写的，被认为是最重要的样式表。用户可以通过浏览器应用自己的样式，这些样式表的重要度低一级。最后是浏览器或用户代理使用的样式表，它们的重要度是最低的，所以你总是可以覆盖它们。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;层叠采用以下重要度次序：&lt;ol&gt;
&lt;li&gt;标有&lt;code&gt;!important&lt;/code&gt;的用户样式&lt;/li&gt;
&lt;li&gt;标有&lt;code&gt;!important&lt;/code&gt;的作者样式&lt;/li&gt;
&lt;li&gt;作者样式&lt;/li&gt;
&lt;li&gt;用户样式&lt;/li&gt;
&lt;li&gt;浏览器/用户代理应用的样式&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后根据选择器的特殊性决定规则的次序，具有更特殊选择器的规则优于具有一般选择器的规则，如果两个规则的特殊性相同，那么后定义的规则优先&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择器的特殊性分成4个成分等级：a、b、c、d&lt;ul&gt;
&lt;li&gt;如果样式是行内样式，那么a=1&lt;/li&gt;
&lt;li&gt;b等于ID选择器的总数&lt;/li&gt;
&lt;li&gt;c等于类、伪类和属性选择器的数量&lt;/li&gt;
&lt;li&gt;d等于类型选择器和伪元素的数量&lt;br&gt;最后按照abcd的顺序将计算的值列出，数字越大的就越特殊&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;建议：尽量保持一般性样式非常一般，特殊性样式尽可能特殊，这样就不需要覆盖特殊样式了。如果发现不得不多次覆盖一般样式，那么从更一般的规则中删除需要覆盖的声明，并且将它显示地应用于需要它的每个元素，这样做可能更简单。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最后：&lt;em&gt;一种有意思的特殊性用法是在主体(body)标签上应用类或ID，这样做之后，就可以根据页面或在站点范围内覆盖样式。&lt;/em&gt;&lt;/p&gt;
&lt;h4 id=&quot;继承&quot;&gt;&lt;a href=&quot;#继承&quot; class=&quot;headerlink&quot; title=&quot;继承&quot;&gt;&lt;/a&gt;继承&lt;/h4&gt;&lt;p&gt;应用样式的元素的后代会继承样式的某些属性，直接应用于元素的任何样式总会覆盖继承而来的样式，这是因为继承而来的样式的特殊性为空。&lt;/p&gt;
&lt;h4 id=&quot;规划、组织和维护样式表&quot;&gt;&lt;a href=&quot;#规划、组织和维护样式表&quot; class=&quot;headerlink&quot; title=&quot;规划、组织和维护样式表&quot;&gt;&lt;/a&gt;规划、组织和维护样式表&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;最近的浏览器基准测试已经表明，导入样式表比链接样式表要慢&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在使用多个CSS文件时，还有两个速度相关的问题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多个文件会导致从服务器发送更多数据包，这些数据包的数量（而不是内容）会影响下载时间&lt;/li&gt;
&lt;li&gt;另外，浏览器只能从同一个域同时下载数量有限的文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于这些原因，使用结构良好的&lt;strong&gt;单一CSS文件&lt;/strong&gt;可以显著提高下载速度&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;良好的代码结构和清晰的注释有助于代码的维护，在每个注释头中添加一个标志(比如&lt;code&gt;@&lt;/code&gt;)会有助于寻找特定的样式&lt;br&gt;作者推荐的代码结构&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一般性样式&lt;pre&gt;&lt;code&gt;- 主体样式
- reset样式
- 链接
- 标题
- 其他元素
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;辅助样式&lt;pre&gt;&lt;code&gt;- 表单
- 通知和错误
- 一致的条目
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;页面结构&lt;pre&gt;&lt;code&gt;- 标题、页脚和导航
- 布局
- 其他页面结构元素
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;页面组件&lt;pre&gt;&lt;code&gt;- 各个页面
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;覆盖&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;减小CSS文件大小可以通过删除注释和空白，但最好方法可能是启用服务器端压缩GZIP&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;样式指南是帮助维护或实现站点的好方法，通过制定一些简单的原则，可以确保站点的开发以可控制的方式进行，同时防止样式随着时间的推移变得散乱。&lt;/li&gt;
&lt;li&gt;模式组合是一个页面或一系列页面，它们使用当前的样式表显示站点上可能出现的每种每种样式排列组合，从标题级别和文本样式直到特定的内容和布局类型。这些页面可以让后端和前端开发人员方便地构建页面组合&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;深入理解-line-height&quot;&gt;&lt;a href=&quot;#深入理解-line-height&quot; class=&quot;headerlink&quot; title=&quot;深入理解 line-height&quot;&gt;&lt;/a&gt;深入理解 line-height&lt;/h2&gt;&lt;p&gt;在百度学院的任务列表上推荐了一篇详解line-height的博客，学习了一下，文章分析的非常细致，原文请戳 &lt;a href=&quot;http://www.cnblogs.com/fengzheng126/archive/2012/05/18/2507632.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《深入了解CSS的行高line-height属性》&lt;/a&gt;，我只做了些摘录性的笔记&lt;br&gt;可以有5种方式来定义line-height。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可以被定义为：&lt;code&gt;body {line-height:normal;}&lt;/code&gt;，会根据自己的font-size和一个大概默认的系数来计算行高，但系数不能通过样式更改&lt;/li&gt;
&lt;li&gt;可以被定义为：&lt;code&gt;body {line-height:inherit;}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;可以使用一个百分比的值：&lt;code&gt;body {line-height:120%;}&lt;/code&gt;，这种方法会导致所有继承的元素的行高都是一样通过body的font-size计算出来的固定值，而不是通过自己的font-size计算出来的&lt;/li&gt;
&lt;li&gt;可以被定义为一个长度值(px,em等)：&lt;code&gt;body {line-height:25px;}&lt;/code&gt;，表现同百分比&lt;/li&gt;
&lt;li&gt;也可以被定义为纯数字：&lt;code&gt;body {line-height:1.2;}&lt;/code&gt;，和normal差不多，但是可定义自己期望的行高系数基于当前行的字体大小来计算。WCAG 2.0规定1.5为最佳&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;计算后的line-height-font-size就是可用的间距了，将其/2然后分别放到当前行的顶部和底部&lt;/p&gt;
&lt;p&gt;上面那篇博客中还讲解了line-height应用于内容时可能发生的复杂情形，我就不搬运了&lt;/p&gt;
&lt;h2 id=&quot;圣马杯-amp-双飞翼布局&quot;&gt;&lt;a href=&quot;#圣马杯-amp-双飞翼布局&quot; class=&quot;headerlink&quot; title=&quot;圣马杯 &amp;amp; 双飞翼布局&quot;&gt;&lt;/a&gt;圣马杯 &amp;amp; 双飞翼布局&lt;/h2&gt;&lt;p&gt;另外还学习了圣马杯和淘宝的双飞翼布局，并总结了一点异同点&lt;br&gt;相同点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用同样的html结构，基于优先渲染主要内容的原则，会把主内容区放在前面&lt;/li&gt;
&lt;li&gt;都是多列布局&lt;/li&gt;
&lt;li&gt;同样使用浮动技术和左右负边距来布局&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不同点表现在主内容被遮盖时&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;圣马杯布局对多列的wrapper采用了padding，但是会导致左右列位置发生变化，然后对左右列使用&lt;code&gt;position:relative&lt;/code&gt;和&lt;code&gt;left&lt;/code&gt;或&lt;code&gt;right&lt;/code&gt;的方法纠正&lt;/li&gt;
&lt;li&gt;双飞翼布局则将在主内容区中多嵌套了一层wrapper，然后对嵌套在主内容区的wrapper使用左右margin来保证内容区想要显示的内容在正确的位置上&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是几篇介绍双飞翼布局和圣马杯的博客：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/wenda/detail/254035&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;双飞翼布局介绍-始于淘宝UED&lt;/a&gt;，其实这篇博客是比较权威的一篇，但是描述时上下文有点对应不上，而且展示页面访问不了，所以理解起来很费劲&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.fazero.cc/2015/07/25/CSS%E5%B8%83%E5%B1%80-%E5%9C%A3%E6%9D%AF%E5%B8%83%E5%B1%80vs%E5%8F%8C%E9%A3%9E%E7%BF%BC%E5%B8%83%E5%B1%80/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS布局-圣杯布局vs双飞翼布局&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/imwtr/p/4441741.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS布局 – 圣杯布局 &amp;amp; 双飞翼布局&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/langzs/archive/2013/01/27/taobaoshuangfeiyi.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS布局之–淘宝双飞翼布局&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我打算自己写一篇博客专门介绍这两种布局方式&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;维基大学的Challenge-5&quot;&gt;&lt;a href=&quot;#维基大学的Challenge-5&quot; class=&quot;headerlink&quot; title=&quot;维基大学的Challenge 5&quot;&gt;&lt;/a&gt;维基大学的Challenge 5&lt;/h2&gt;&lt;p&gt;完成了维基大学的Challe
    
    </summary>
    
      <category term="tech" scheme="http://archmee.github.io/categories/tech/"/>
    
    
      <category term="Front End" scheme="http://archmee.github.io/tags/Front-End/"/>
    
  </entry>
  
  <entry>
    <title>前端之旅第 18~20 天</title>
    <link href="http://archmee.github.io/201607/2016-07-23-25.html"/>
    <id>http://archmee.github.io/201607/2016-07-23-25.html</id>
    <published>2016-07-24T16:00:00.000Z</published>
    <updated>2016-07-25T16:30:11.145Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Challenge-3&quot;&gt;&lt;a href=&quot;#Challenge-3&quot; class=&quot;headerlink&quot; title=&quot;Challenge 3&quot;&gt;&lt;/a&gt;Challenge 3&lt;/h2&gt;&lt;p&gt;23号做维基Challenge 3的时候看了推荐的&lt;a href=&quot;http://maxdesign.com.au/articles/two-columns/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一篇两列布局教程&lt;/a&gt;，它使用了一种很新颖的方式实现了两列布局，它的新颖之处就在于，虽然仍然使用浮动，但它使用背景图像来造成视觉上的分栏，而不是给各列设置背景颜色或图像，这样做保证了两列在视觉上的等高，这样不管是哪一列增高了，随着列的增高导致整个布局增高，而背景在Y轴平铺之后，另一列在视觉上也增高了&lt;/p&gt;
&lt;script async src=&quot;https://jsfiddle.net/ym24ukus/embed/html,css,result/&quot;&gt;&lt;/script&gt;

&lt;p&gt;自己仿造教程做了Challenge 3（因为这个需要专门制作背景图像，所以我使用了现成的图像）&lt;/p&gt;
&lt;script async src=&quot;https://jsfiddle.net/ym24ukus/2/embed/html,css,result/&quot;&gt;&lt;/script&gt;

&lt;p&gt;然后按照自己理解用另一种方式实现了同样效果&lt;/p&gt;
&lt;script async src=&quot;https://jsfiddle.net/ym24ukus/3/embed/html,css,result/&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;Challenge-4&quot;&gt;&lt;a href=&quot;#Challenge-4&quot; class=&quot;headerlink&quot; title=&quot;Challenge 4&quot;&gt;&lt;/a&gt;Challenge 4&lt;/h2&gt;&lt;p&gt;25号做了Challenge 4，Demo如下，css中也注释了不同的实现方式：&lt;/p&gt;
&lt;script async src=&quot;https://jsfiddle.net/ym24ukus/4/embed/html,css,result/&quot;&gt;&lt;/script&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Challenge-3&quot;&gt;&lt;a href=&quot;#Challenge-3&quot; class=&quot;headerlink&quot; title=&quot;Challenge 3&quot;&gt;&lt;/a&gt;Challenge 3&lt;/h2&gt;&lt;p&gt;23号做维基Challenge 3的时候看了推荐的&lt;a href=&quot;
    
    </summary>
    
      <category term="tech" scheme="http://archmee.github.io/categories/tech/"/>
    
    
      <category term="Front End" scheme="http://archmee.github.io/tags/Front-End/"/>
    
  </entry>
  
  <entry>
    <title>前端之旅第 16、17 天</title>
    <link href="http://archmee.github.io/201607/2016-07-21-22.html"/>
    <id>http://archmee.github.io/201607/2016-07-21-22.html</id>
    <published>2016-07-21T16:00:00.000Z</published>
    <updated>2016-07-23T15:11:33.987Z</updated>
    
    <content type="html">&lt;p&gt;到上一篇博客为止，已经完成了《Head First HTML&amp;amp;CSS》这本书的学习，所以接下来会注重实践任务，先做一些静态页面，熟悉HTML以及CSS。&lt;br&gt;这两天的学习内容如下&lt;/p&gt;
&lt;h2 id=&quot;终结慕课网HTML-CSS基础课程&quot;&gt;&lt;a href=&quot;#终结慕课网HTML-CSS基础课程&quot; class=&quot;headerlink&quot; title=&quot;终结慕课网HTML+CSS基础课程&quot;&gt;&lt;/a&gt;终结慕课网HTML+CSS基础课程&lt;/h2&gt;&lt;p&gt;在写我最开始的几篇博客中，已经完成了慕课网 &lt;a href=&quot;http://www.imooc.com/learn/9&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTML+CSS基础课程&lt;/a&gt; 的HTML部分，这两天花了点时间完成了CSS部分，记录了一些笔记&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在网页中，元素有三种布局模型：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;流动模型（Flow）：默认html元素流入页面的方式&lt;/li&gt;
&lt;li&gt;浮动模型 (Float)：使用float技术&lt;/li&gt;
&lt;li&gt;层模型（Layer）：层模型有三种形式：&lt;ul&gt;
&lt;li&gt;绝对定位(position: absolute)&lt;/li&gt;
&lt;li&gt;相对定位(position: relative)&lt;/li&gt;
&lt;li&gt;固定定位(position: fixed)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当元素被设置为块状元素时用 text-align：center 就不起作用了，这时也分两种情况：定宽块状元素和不定宽块状元素。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;满足定宽和块状两个条件的元素是可以通过设置“左右margin”值为“auto”来实现居中的。&lt;/li&gt;
&lt;li&gt;不定宽度的块状元素有三种方法居中（这三种方法目前使用的都很多）：&lt;ol&gt;
&lt;li&gt;使用 table 等表格标签&lt;/li&gt;
&lt;li&gt;设置 display: inline 方法：与第一种类似，显示类型设为行内元素，进行不定宽元素的属性设置&lt;/li&gt;
&lt;li&gt;通过给父元素设置 float，然后给父元素设置 position:relative 和 left:50%，子元素设置 position:relative 和 left: -50% 来实现水平居中。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;父元素高度确定的单行文本的竖直居中的方法是通过设置父元素的 height 和 line-height 高度一致来实现的。(height: 该元素的高度，line-height: 顾名思义，行高（行间距），指在文本中，行与行之间的 基线间的距离 )。&lt;br&gt;line-height 与 font-size 的计算值之差，在 CSS 中成为“行间距”。分为两半，分别加到一个文本行内容的顶部和底部。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;父元素高度确定的多行文本、图片等的竖直居中的方法有两种： &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用插入 table (包括tbody、tr、td)标签，同时设置 vertical-align：middle。 css 中有一个用于竖直居中的属性 vertical-align，在父元素设置此样式时，会对inline-block类型的子元素都有用。&lt;/li&gt;
&lt;li&gt;在 chrome、firefox 及 IE8 以上的浏览器下可以设置块级元素的 display 为 table-cell（设置为表格单元显示），激活 vertical-align 属性，但注意 IE6、7 并不支持这个样式, 兼容性比较差。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;有一个有趣的现象就是当为元素（不论之前是什么类型元素，display:none 除外）设置以下2个之一：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;position : absolute &lt;/li&gt;
&lt;li&gt;float : left 或 float:right &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;简单来说，只要html代码中出现以上其中之一，元素的display显示类型就会自动变为以 display:inline-block（内联块元素）的方式显示，当然就可以设置元素的 width 和 height 了，且默认宽度不占满父元素。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;维基大学-CSS-Challenge&quot;&gt;&lt;a href=&quot;#维基大学-CSS-Challenge&quot; class=&quot;headerlink&quot; title=&quot;维基大学 CSS Challenge&quot;&gt;&lt;/a&gt;维基大学 CSS Challenge&lt;/h2&gt;&lt;p&gt;不知道是从哪里找到了这个页面&lt;a href=&quot;https://en.wikiversity.org/wiki/Web_Design/CSS_challenges&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Wikiversity CSS challenges&lt;/a&gt;，上面列出了7个循序渐进的挑战项目，无外乎CSS的基础知识的运用，盒子模型，字体排版、以及布局。&lt;br&gt;目前为止我完成了前2个（其实是3个，还有一个可选Challenge 2 A），代码已经放到了github上&lt;br&gt;Challenge 2 A Demo：&lt;/p&gt;
&lt;script async src=&quot;https://jsfiddle.net/ym24ukus/1/embed/html,css,result/&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;first-letter-和-first-letter-的区别：&quot;&gt;&lt;a href=&quot;#first-letter-和-first-letter-的区别：&quot; class=&quot;headerlink&quot; title=&quot;:first-letter 和 ::first-letter 的区别：&quot;&gt;&lt;/a&gt;:first-letter 和 ::first-letter 的区别：&lt;/h2&gt;&lt;p&gt;对于 CSS 2， &lt;strong&gt;伪元素&lt;/strong&gt;采用单冒号前缀语法. 因为&lt;strong&gt;伪类&lt;/strong&gt;也是同样的语法，所以使得两者难以区分。CSS2.1 改变了伪元素的前缀语法可以解决这个问题，现在伪元素采用双冒号前缀，并且伪类仍然采用单冒号前缀。&lt;br&gt;CSS2伪类单冒号语法已得到广泛支持时，所有支持双冒号的浏览器同样也支持旧的单冒号语法。&lt;br&gt;考虑浏览器兼容性的话，:first-letter 是一个更有效的选择; 否则， ::first-letter 更受欢迎。&lt;/p&gt;
&lt;h2 id=&quot;未来一段时间的计划&quot;&gt;&lt;a href=&quot;#未来一段时间的计划&quot; class=&quot;headerlink&quot; title=&quot;未来一段时间的计划&quot;&gt;&lt;/a&gt;未来一段时间的计划&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;完成CSS Challenge上面的内容&lt;/li&gt;
&lt;li&gt;核对下百度学院上的学习路径&lt;/li&gt;
&lt;li&gt;模仿生日管家官网（&lt;a href=&quot;http://shengri.cn/）&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://shengri.cn/）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;除了验证html、css外，还要看一些编码规范，对项目进行整理&lt;/li&gt;
&lt;li&gt;了解less或sass并对模仿的项目进行重构&lt;/li&gt;
&lt;li&gt;模仿CSS-Tricks（&lt;a href=&quot;https://css-tricks.com/），再用less或sass进行重构&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://css-tricks.com/），再用less或sass进行重构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;学习js、jsDOM、jQ，做相关技术的项目&lt;/li&gt;
&lt;li&gt;了解webpack等工具&lt;/li&gt;
&lt;li&gt;学习js更高级的内容&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当然计划只是计划，永远赶不上变化，学习过程中也会不断调整计划&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;到上一篇博客为止，已经完成了《Head First HTML&amp;amp;CSS》这本书的学习，所以接下来会注重实践任务，先做一些静态页面，熟悉HTML以及CSS。&lt;br&gt;这两天的学习内容如下&lt;/p&gt;
&lt;h2 id=&quot;终结慕课网HTML-CSS基础课程&quot;&gt;&lt;a href=&quot;#终
    
    </summary>
    
      <category term="tech" scheme="http://archmee.github.io/categories/tech/"/>
    
    
      <category term="Front End" scheme="http://archmee.github.io/tags/Front-End/"/>
    
  </entry>
  
  <entry>
    <title>前端之旅第 14、15 天</title>
    <link href="http://archmee.github.io/201607/2016-07-19-20.html"/>
    <id>http://archmee.github.io/201607/2016-07-19-20.html</id>
    <published>2016-07-19T16:00:00.000Z</published>
    <updated>2016-07-21T06:08:30.814Z</updated>
    
    <content type="html">&lt;p&gt;把这两天的学习笔记总结在了一起，如下。&lt;/p&gt;
&lt;h2 id=&quot;第13章-表格与列表&quot;&gt;&lt;a href=&quot;#第13章-表格与列表&quot; class=&quot;headerlink&quot; title=&quot;第13章. 表格与列表&quot;&gt;&lt;/a&gt;第13章. 表格与列表&lt;/h2&gt;&lt;h3 id=&quot;表格&quot;&gt;&lt;a href=&quot;#表格&quot; class=&quot;headerlink&quot; title=&quot;表格&quot;&gt;&lt;/a&gt;表格&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;标记表格、&lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt;标记表格行、&lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt;定义表头单元格（可以是顶部，也可以在左侧）、&lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt;定义表内容单元格，&lt;code&gt;&amp;lt;caption&amp;gt;&lt;/code&gt;定义表格标题（caption-side 规则可以指定表格标题的显示位置）&lt;/li&gt;
&lt;li&gt;HTML表格允许你使用HTML标记指定表格的结构，而CSS表格显示则提供了一种可以用类似表格的表现方式显示块级元素&lt;/li&gt;
&lt;li&gt;&lt;p&gt;表格单元格没有外边距，单元格之间的空间叫做 border-spacing（边框间距），border-spacing为所有单元格设置一个共同的间距，也就是说它是针对整个表格，而不是为单独的单元格设置。&lt;br&gt;border-spacing还可以在垂直方向和水平方向设置不同的边框间距&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;border-spacing&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;/*10px的水平边框间距，5px的垂直边框间距*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;border-collapse 规则可折叠表格边框，使单元格之间没有间距&lt;code&gt;border-collapse:collapse;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;nth-child 伪类可选择位于父元素下的第n个子元素，第0个代表没有选中，而且&lt;strong&gt;不限制于元素类型&lt;/strong&gt;&lt;/p&gt;
  &lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*可以直接指定奇偶数段落*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;pseudo&quot;&gt;:nth-child(even)&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/*odd是奇数*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; red&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*还可以使用简单的多项式指定*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;pseudo&quot;&gt;:nth-child(2n+1)&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; white&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;nth-of-type 伪类可指定位于父元素下的同类型的第n个元素，&lt;strong&gt;要限制元素类型&lt;/strong&gt;（书上没有讲这个）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;表格可以嵌套&lt;/li&gt;
&lt;li&gt;可以给&lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt;添加&lt;code&gt;rowspan&lt;/code&gt; 和&lt;code&gt;colspan&lt;/code&gt;属性来指定跨行跨列&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;列表&quot;&gt;&lt;a href=&quot;#列表&quot; class=&quot;headerlink&quot; title=&quot;列表&quot;&gt;&lt;/a&gt;列表&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;list-style-type属性值可以更改列表标记：&lt;ul&gt;
&lt;li&gt;disc：圆点&lt;/li&gt;
&lt;li&gt;circle：空心圆&lt;/li&gt;
&lt;li&gt;square：方块&lt;/li&gt;
&lt;li&gt;none：无标记&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;list-style-image 指定图像代替列表标记&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;list-style-postion&lt;/strong&gt; 可以指定列表标记的回绕方式：&lt;ul&gt;
&lt;li&gt;inside：使列表标记包含在li元素文字内，换行的文字会在标记下面回绕&lt;/li&gt;
&lt;li&gt;outside：默认值，使标记独立于文字，换行的文字不会在标记下面回绕&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h3&gt;&lt;p&gt;当用 nth-child 为表格奇偶行指定不同颜色时，如果同时给 &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt;添加了&lt;code&gt;rowspan&lt;/code&gt; 属性的话，浏览器会将设置跨行的行计算在内来计算 td 位于 nth-child 的顺序，这样导致表格样式看起来很混乱，暂时没找到不使用js等技术的方法，除非不使用 nth-child，而改用类来手动指定。问题如下代码：&lt;/p&gt;
&lt;script async src=&quot;https://jsfiddle.net/7zh7uo7s/7/embed/html,css,result/&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;第14章-表单&quot;&gt;&lt;a href=&quot;#第14章-表单&quot; class=&quot;headerlink&quot; title=&quot;第14章. 表单&quot;&gt;&lt;/a&gt;第14章. 表单&lt;/h2&gt;&lt;h3 id=&quot;常见表单元素&quot;&gt;&lt;a href=&quot;#常见表单元素&quot; class=&quot;headerlink&quot; title=&quot;常见表单元素&quot;&gt;&lt;/a&gt;常见表单元素&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;text input 用于单行文本输入&lt;/li&gt;
&lt;li&gt;submit input 用于创建提交表单的按钮，value属性可指定提交按钮的文字&lt;/li&gt;
&lt;li&gt;radio input 用于创建单选框，同组的只能使用一个同一name，因为同一时刻只有一个被选中，checked 是布尔属性，可以为单选框和复选框标记默认值&lt;/li&gt;
&lt;li&gt;checkbox input 用于创建复选框，checked 是布尔属性，可以为单选框和复选框标记默认值，同组的一次也只使用一个name，但是在后面加上[]便于服务器脚本识别多个值，如&lt;code&gt;name=&amp;quot;name[]&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;textarea 创建多行文本输入区&lt;/li&gt;
&lt;li&gt;select 结合 option 创建选择菜单，selected是布尔属性，可以为菜单选择提供默认值，布尔属性&lt;code&gt;multiple&lt;/code&gt;可将这个菜单变成多选菜单，name属性是给select而不是option&lt;/li&gt;
&lt;li&gt;input 是&lt;strong&gt;内联元素&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;html5新增表单元素&quot;&gt;&lt;a href=&quot;#html5新增表单元素&quot; class=&quot;headerlink&quot; title=&quot;html5新增表单元素&quot;&gt;&lt;/a&gt;html5新增表单元素&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;number input 创建文本输入框用于输入数字，可用min和max属性指定数字范围，如果超出范围提交表单会发出警告&lt;/li&gt;
&lt;li&gt;range input 创建一个滑动条来选择范围&lt;/li&gt;
&lt;li&gt;color input 创建一个颜色选择器提供颜色输入&lt;/li&gt;
&lt;li&gt;date input 创建日期选择器&lt;/li&gt;
&lt;li&gt;email input 提供邮件地址输入框，类似文本框&lt;/li&gt;
&lt;li&gt;tel input 提供电话号码输入框，类似文本框&lt;/li&gt;
&lt;li&gt;url input 提供url输入框，类似文本框&lt;/li&gt;
&lt;li&gt;password input 提供密码输入框，会对输入的文本加掩码，当然这仅仅只是防止了输入密码时被别人看到，并不能保证数据传输的安全性&lt;/li&gt;
&lt;li&gt;file input 提供文件上传控件&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;使用表单&quot;&gt;&lt;a href=&quot;#使用表单&quot; class=&quot;headerlink&quot; title=&quot;使用表单&quot;&gt;&lt;/a&gt;使用表单&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;action 属性指定表单提交的服务器脚本地址&lt;/li&gt;
&lt;li&gt;method 提供提交的方法，有GET和POST两种&lt;ul&gt;
&lt;li&gt;GET：会将你的表单变量追加到URL最后，然后请求服务器&lt;/li&gt;
&lt;li&gt;POST：这种方式会打包你的表单变量，在后台把它们发送到服务器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;fieldset+legend 可以对表单元素进行视觉上的分组&lt;/li&gt;
&lt;li&gt;placeholder 属性为输入框提供提示文字，它不会作为表单的值提交&lt;/li&gt;
&lt;li&gt;required 可用于任何表单控件，指示一个域是必须要提供值的&lt;/li&gt;
&lt;li&gt;合理使用&lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;标记可增强页面的可访问性，可以提供页面结构的更多信息，使你更容易对标签设置样式，另外也有助于有视力障碍的用户使用屏幕阅读器更准确的标识表单元素&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Demo：&lt;/p&gt;
&lt;script async src=&quot;https://jsfiddle.net/1jdux83p/2/embed/html,css,result/&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;附录-没有谈到的十大主题&quot;&gt;&lt;a href=&quot;#附录-没有谈到的十大主题&quot; class=&quot;headerlink&quot; title=&quot;附录. 没有谈到的十大主题&quot;&gt;&lt;/a&gt;附录. 没有谈到的十大主题&lt;/h2&gt;&lt;h3 id=&quot;1-更多CSS选择器&quot;&gt;&lt;a href=&quot;#1-更多CSS选择器&quot; class=&quot;headerlink&quot; title=&quot;1. 更多CSS选择器&quot;&gt;&lt;/a&gt;1. 更多CSS选择器&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;伪元素：可以用来选择元素的某些部分，如&lt;code&gt;p:first-letter&lt;/code&gt;会选择段落中的第一个字母&lt;/li&gt;
&lt;li&gt;属性选择器：通过元素的属性来匹配选择器，如&lt;code&gt;img[width]&lt;/code&gt;会选择提供了width属性的img元素&lt;/li&gt;
&lt;li&gt;兄弟选择器：根据兄弟来选择一个元素，如&lt;code&gt;h1+p&lt;/code&gt;会选择所有h1后面的p元素&lt;/li&gt;
&lt;li&gt;结合选择器：通过对各种已有选择器进行组合来选择元素&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2-开发商特定的CSS属性&quot;&gt;&lt;a href=&quot;#2-开发商特定的CSS属性&quot; class=&quot;headerlink&quot; title=&quot;2. 开发商特定的CSS属性&quot;&gt;&lt;/a&gt;2. 开发商特定的CSS属性&lt;/h3&gt;&lt;p&gt;通常是浏览器制造商为他们的浏览器增加新的功能来测试新特性，常见的几个特定属性如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;浏览器&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-moz-&lt;/td&gt;
&lt;td&gt;mozilla的firefox&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-webkit-&lt;/td&gt;
&lt;td&gt;Safari和Chrome&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-ms-&lt;/td&gt;
&lt;td&gt;微软的IE浏览器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-o-&lt;/td&gt;
&lt;td&gt;Opera浏览器&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;使用方式是用上表的名称结合css相应属性&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;trasform&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;function&quot;&gt;rotate&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;45deg&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;-moz-trasform&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;function&quot;&gt;rotate&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;45deg&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;/*支持firefox*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;-webkit-trasform&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;function&quot;&gt;rotate&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;45deg&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;/*支持Chrome等*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;-ms-trasform&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;function&quot;&gt;rotate&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;45deg&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;/*支持IE*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;-o-trasform&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;function&quot;&gt;rotate&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;45deg&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;/*支持Opera*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;3-CSS变换与过渡&quot;&gt;&lt;a href=&quot;#3-CSS变换与过渡&quot; class=&quot;headerlink&quot; title=&quot;3. CSS变换与过渡&quot;&gt;&lt;/a&gt;3. CSS变换与过渡&lt;/h3&gt;&lt;p&gt;可以对元素做充分的2D和3D变换，Demo&lt;/p&gt;
&lt;p&gt;&lt;script async src=&quot;http://jsfiddle.net/1jdux83p/1/embed/html,css,result/&quot;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;虽然我写了针对ie的效果，但是ie好像不支持&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;4-交互&quot;&gt;&lt;a href=&quot;#4-交互&quot; class=&quot;headerlink&quot; title=&quot;4. 交互&quot;&gt;&lt;/a&gt;4. 交互&lt;/h3&gt;&lt;h3 id=&quot;5-HTML5-API和Web应用&quot;&gt;&lt;a href=&quot;#5-HTML5-API和Web应用&quot; class=&quot;headerlink&quot; title=&quot;5. HTML5 API和Web应用&quot;&gt;&lt;/a&gt;5. HTML5 API和Web应用&lt;/h3&gt;&lt;h3 id=&quot;6-再谈Web字体&quot;&gt;&lt;a href=&quot;#6-再谈Web字体&quot; class=&quot;headerlink&quot; title=&quot;6. 再谈Web字体&quot;&gt;&lt;/a&gt;6. 再谈Web字体&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;有一些免费的字体服务可以使用&lt;/li&gt;
&lt;li&gt;浏览器下载字体时会有不同表现，有些浏览器会显示一个备份字体，另外一些可能会等待字体下载完毕后才显示文本&lt;/li&gt;
&lt;li&gt;一旦下载了字体，会由浏览器缓存，下次遇到该字体时不会再次下载&lt;/li&gt;
&lt;li&gt;所有现代浏览器（IE9+）都支持Web字体&lt;/li&gt;
&lt;li&gt;有很多免费字体可以使用&lt;/li&gt;
&lt;li&gt;使用Web字体可能会对你的页面性能产生一定影响&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@font-face&lt;/code&gt;规则中的字体应当仅限于页面中真正使用的字体&lt;/li&gt;
&lt;li&gt;如果你有某个字体的许可证，要与你的开发商核对一下，他们可能在你的web上也可以使用&lt;/li&gt;
&lt;li&gt;与传统字体一样，一定要包含某个字体作为退路，以免你的字体不可用，或者获取、解码字体时遇到错误&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;7-创建Web页面的工具&quot;&gt;&lt;a href=&quot;#7-创建Web页面的工具&quot; class=&quot;headerlink&quot; title=&quot;7. 创建Web页面的工具&quot;&gt;&lt;/a&gt;7. 创建Web页面的工具&lt;/h3&gt;&lt;h3 id=&quot;8-XHTML&quot;&gt;&lt;a href=&quot;#8-XHTML&quot; class=&quot;headerlink&quot; title=&quot;8. XHTML&quot;&gt;&lt;/a&gt;8. XHTML&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;如果你需要验证文档或者把你的文档转换成xml，或者SVG，就需要使用XHTML&lt;/li&gt;
&lt;li&gt;所有元素都必须是良构的，良构是指，要结束所有元素，用引号包围属性值，合法嵌套元素等，所有void元素都必须在结束标签以前使用&lt;code&gt;/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;页面应当指定application/xhtml+xml MIME类型&lt;/li&gt;
&lt;li&gt;确保html元素中包含XHTML命名空间&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;9-服务器端脚本&quot;&gt;&lt;a href=&quot;#9-服务器端脚本&quot; class=&quot;headerlink&quot; title=&quot;9. 服务器端脚本&quot;&gt;&lt;/a&gt;9. 服务器端脚本&lt;/h3&gt;&lt;h3 id=&quot;10-音频-Audio&quot;&gt;&lt;a href=&quot;#10-音频-Audio&quot; class=&quot;headerlink&quot; title=&quot;10. 音频 Audio&quot;&gt;&lt;/a&gt;10. 音频 Audio&lt;/h3&gt;&lt;p&gt;HTML利用&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;元素提供了一种标准方法在页面中播放音频，而无需使用插件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;与视频类似，音频也没有标准编码，目前有3种主流格式：MP3、WAV、Ogg Vorbis&lt;/li&gt;
&lt;li&gt;audio元素及其javascript API提供了其他控制&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;把这两天的学习笔记总结在了一起，如下。&lt;/p&gt;
&lt;h2 id=&quot;第13章-表格与列表&quot;&gt;&lt;a href=&quot;#第13章-表格与列表&quot; class=&quot;headerlink&quot; title=&quot;第13章. 表格与列表&quot;&gt;&lt;/a&gt;第13章. 表格与列表&lt;/h2&gt;&lt;h3 id=&quot;表格&quot;&gt;
    
    </summary>
    
      <category term="tech" scheme="http://archmee.github.io/categories/tech/"/>
    
    
      <category term="Front End" scheme="http://archmee.github.io/tags/Front-End/"/>
    
  </entry>
  
  <entry>
    <title>前端之旅第 13 天</title>
    <link href="http://archmee.github.io/201607/2016-07-18.html"/>
    <id>http://archmee.github.io/201607/2016-07-18.html</id>
    <published>2016-07-17T16:00:00.000Z</published>
    <updated>2016-07-21T05:53:57.095Z</updated>
    
    <content type="html">&lt;h2 id=&quot;第12章-html5标记&quot;&gt;&lt;a href=&quot;#第12章-html5标记&quot; class=&quot;headerlink&quot; title=&quot;第12章. html5标记&quot;&gt;&lt;/a&gt;第12章. html5标记&lt;/h2&gt;&lt;h3 id=&quot;常用标签&quot;&gt;&lt;a href=&quot;#常用标签&quot; class=&quot;headerlink&quot; title=&quot;常用标签&quot;&gt;&lt;/a&gt;常用标签&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;标签&lt;/th&gt;
&lt;th&gt;用途&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;header&lt;/td&gt;
&lt;td&gt;定义页面头部内容或某个区块的顶部&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;footer&lt;/td&gt;
&lt;td&gt;定义页面底部内容或某个区块的底部&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nav&lt;/td&gt;
&lt;td&gt;定义导航&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;time&lt;/td&gt;
&lt;td&gt;表现日期时间, 详细可以查看&lt;a href=&quot;http://www.w3school.com.cn/tags/tag_time.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;w3school&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;section&lt;/td&gt;
&lt;td&gt;表示一个由相关内容构成的结构明确的区块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;article&lt;/td&gt;
&lt;td&gt;表示可以独立于页面上的其余元素进行重用和分发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;aside&lt;/td&gt;
&lt;td&gt;定义页面的补充内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;video&lt;/td&gt;
&lt;td&gt;定义和视频媒体有关的内容&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;header 和 footer 都不仅仅用于主页眉页脚，如果你希望把一些元素组合起来放在一个首部或尾部中，都可以使用该标签。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Video&quot;&gt;&lt;a href=&quot;#Video&quot; class=&quot;headerlink&quot; title=&quot;Video&quot;&gt;&lt;/a&gt;Video&lt;/h3&gt;&lt;h4 id=&quot;video-相关属性：&quot;&gt;&lt;a href=&quot;#video-相关属性：&quot; class=&quot;headerlink&quot; title=&quot;video 相关属性：&quot;&gt;&lt;/a&gt;video 相关属性：&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt; 指定视频位置&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type&lt;/code&gt; 说明视频类型&lt;/li&gt;
&lt;li&gt;&lt;code&gt;controls&lt;/code&gt; 是布尔属性，用来显示播放控件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;autoplay&lt;/code&gt; 是布尔属性，是否加载页面时自动播放&lt;/li&gt;
&lt;li&gt;&lt;code&gt;loop&lt;/code&gt; 布尔属性，是否循环播放&lt;/li&gt;
&lt;li&gt;&lt;code&gt;width&lt;/code&gt; 和 &lt;code&gt;height&lt;/code&gt; 指定显示视频的窗口大小&lt;/li&gt;
&lt;li&gt;&lt;code&gt;poster&lt;/code&gt; 可以指定视频的一帧画面或其他图片作为视频封面，视频默认取第一帧画面&lt;/li&gt;
&lt;li&gt;&lt;code&gt;preload&lt;/code&gt; 可以细粒度地指定视频加载方式&lt;ul&gt;
&lt;li&gt;none：在用户真正播放视频之前不下载视频&lt;/li&gt;
&lt;li&gt;metadata：下载视频元数据，但是不下载视频内容&lt;/li&gt;
&lt;li&gt;auto：让浏览器自己决定&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;视频格式&quot;&gt;&lt;a href=&quot;#视频格式&quot; class=&quot;headerlink&quot; title=&quot;视频格式&quot;&gt;&lt;/a&gt;视频格式&lt;/h4&gt;&lt;p&gt;一个视频文件包含两部分，一个视频部分和一个音频部分，每个部分使用一种特定的编码类型来编码，包含视频和音频的文件称为容器，也有自己的格式和格式名。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;视频容器类型&lt;/th&gt;
&lt;th&gt;视频容器格式&lt;/th&gt;
&lt;th&gt;视频编码格式&lt;/th&gt;
&lt;th&gt;音频编码格式&lt;/th&gt;
&lt;th&gt;支持情况&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;MP4容器&lt;/td&gt;
&lt;td&gt;.mp4&lt;/td&gt;
&lt;td&gt;H.264视频编码&lt;/td&gt;
&lt;td&gt;ACC音频编码&lt;/td&gt;
&lt;td&gt;Safari、IE9、部分Chrome&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WebM容器&lt;/td&gt;
&lt;td&gt;.webm&lt;/td&gt;
&lt;td&gt;Vp8视频编码&lt;/td&gt;
&lt;td&gt;Vorbis音频编码&lt;/td&gt;
&lt;td&gt;Firfox、Chrome、Opera&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ogg容器&lt;/td&gt;
&lt;td&gt;.ogv&lt;/td&gt;
&lt;td&gt;Theora视频编码&lt;/td&gt;
&lt;td&gt;Vorbis音频编码&lt;/td&gt;
&lt;td&gt;Firfox、Chrome、Opera&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h4&gt;&lt;p&gt;简单的使用video播放视频&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;controls&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;autoplay&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;320&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;200&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;video/tweetship.mp4&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;poster&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;images/poster.png&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;video&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果要为多种浏览器提供多种视频格式支持，可用 source 列出可用视频格式，浏览器会从上至下查找，对于每个source元素，浏览器会加载每个视频文件的元数据，查看能不能播放这个视频，直到找到它能播放的视频格式。&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;controls&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;autoplay&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;320&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;200&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;poster&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;images/poster.png&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;video/tweetsip.mp4&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;video/tweetsip.webm&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;video/tweetsip.ogv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Sorry! your browser doesn&#39;t support the video element.&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;video&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;但是这样做导致浏览器在播放视频之前做了太多检查工作，会影响效率，我们可以为每个 source 提供 type 属性帮助浏览器确定视频类型&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;controls&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;autoplay&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;320&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;200&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;poster&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;images/poster.png&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;video/tweetsip.mp4&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&#39;video/mp4; codecs=&quot;avcl.42E01E, mp4a.40.2&quot;&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;video/tweetsip.webm&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&#39;video/webm; codecs=&quot;vp8, vorbis&quot;&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;video/tweetsip.ogv&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&#39;video/ogg; codecs=&quot;theora, vorbis&quot;&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Sorry! your browser doesn&#39;t support the video element.&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;video&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;type&lt;/code&gt; 属性首先说明了视频文件的MIME类型，然后codecs参数指定哪个编码器对视频和音频编码，来创建编码的视频文件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果要支持IE9或其他老版本浏览器用flash，可以在source列表最后添加object元素&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;其他&quot;&gt;&lt;a href=&quot;#其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;CDN（Content delivery Network）是内容分发网络的简称&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;导航条中的&lt;code&gt;li&lt;/code&gt;元素之间产生了边距，不知为何，看了这篇&lt;a href=&quot;http://www.zhangxinxu.com/wordpress/2012/04/inline-block-space-remove-%E5%8E%BB%E9%99%A4%E9%97%B4%E8%B7%9D/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《去除inline-block元素间间距的N种方法》&lt;/a&gt; 后知道这是inline-block导致的，文章中使用了很多方式来解决这个问题，而我采用了在ul的样式中写入&lt;code&gt;display:table;&lt;/code&gt;的方式&lt;/li&gt;
&lt;li&gt;IE9不支持本章节的视频播放，暂未找到理想的解决办法&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第12章-html5标记&quot;&gt;&lt;a href=&quot;#第12章-html5标记&quot; class=&quot;headerlink&quot; title=&quot;第12章. html5标记&quot;&gt;&lt;/a&gt;第12章. html5标记&lt;/h2&gt;&lt;h3 id=&quot;常用标签&quot;&gt;&lt;a href=&quot;#常用标签&quot; c
    
    </summary>
    
      <category term="tech" scheme="http://archmee.github.io/categories/tech/"/>
    
    
      <category term="Front End" scheme="http://archmee.github.io/tags/Front-End/"/>
    
  </entry>
  
  <entry>
    <title>前端之旅第 9~12 天</title>
    <link href="http://archmee.github.io/201607/2016-07-14-17.html"/>
    <id>http://archmee.github.io/201607/2016-07-14-17.html</id>
    <published>2016-07-16T16:00:00.000Z</published>
    <updated>2016-07-18T12:00:40.542Z</updated>
    
    <content type="html">&lt;p&gt;7月14、15、16、17这几天断片了(懒癌发作)，学习也变得闲散起来，总共的学习内容也就差不多平时一天的内容，这里是对这几天学习内容的总结，《Head First HTML &amp;amp; CSS》第11章关于布局和定位讲得非常细致，所以总结的文字也很抽象，需要看书配合图文才能更好理解。&lt;/p&gt;
&lt;h2 id=&quot;第11章-布局和定位&quot;&gt;&lt;a href=&quot;#第11章-布局和定位&quot; class=&quot;headerlink&quot; title=&quot;第11章. 布局和定位&quot;&gt;&lt;/a&gt;第11章. 布局和定位&lt;/h2&gt;&lt;h3 id=&quot;布局&quot;&gt;&lt;a href=&quot;#布局&quot; class=&quot;headerlink&quot; title=&quot;布局&quot;&gt;&lt;/a&gt;布局&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;流让CSS有了强大威力，流实际上就是浏览器在页面中摆放HTML元素所用的方法。浏览器从HTML文件最上面开始，从上到下沿着元素流逐个显示所遇到的各个元素&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;块元素&lt;/strong&gt;从上向下流，各元素之间有一个换行。而&lt;strong&gt;内联元素&lt;/strong&gt;在水平方向会相互挨着，总体上会从左到右、从上往下流（左上方到右下方）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;盒子模型的外边距&lt;/strong&gt;：如果浏览器并排放置内联元素，内联元素水平方上的外边距会正常显示。而浏览器上下放置块元素时，块元素在垂直方向上的外边距会折叠为最大的那个外边距高度（嵌套的话会根据外面的元素的边框，如果有边框就不会折叠，否则嵌套也会折叠）&lt;/li&gt;
&lt;li&gt;对于所有浮动元素，都必须指定一个宽度，当然图像除外，因为图像有自己的默认宽度&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;浮动元素&lt;/strong&gt;不再是正常流的一部分&lt;/li&gt;
&lt;li&gt;float属性首先尽可能的根据float值浮动一个元素，然后它下面的块元素会忽略它的存在，而内联元素都会绕流这个元素。&lt;/li&gt;
&lt;li&gt;css &lt;code&gt;clear&lt;/code&gt;属性要求：当元素流入页面时，这个元素的左边、右边或两边（取决于clear的值）不能有浮动元素，所以被指定了clear属性的元素流入页面时，会根据左右是否有浮动元素来下移直到左右都没有浮动元素为止。&lt;/li&gt;
&lt;li&gt;浮动元素的外边距并不会碰到正常流中元素的外边距，所以他们不会折叠&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可以浮动内联元素，比如图像，但是其他内联元素不常见&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当用户调整屏幕大小时，你的设计仍能保持原样，这称为&lt;strong&gt;冻结布局&lt;/strong&gt;。冻结布局会通过指定宽度锁定元素，让他们冻结在页面上，这样这些元素根本不能移动，就能避免由于窗口扩展带来的问题。自然流入页面或使用浮动的是&lt;strong&gt;流体布局&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;流体和冻结之间的状态就是&lt;strong&gt;凝胶布局&lt;/strong&gt;：通过设置&lt;code&gt;margin: 0 auto;&lt;/code&gt;来实现，凝胶布局将冻结布局的元素在浏览器中居中显示。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;定位&quot;&gt;&lt;a href=&quot;#定位&quot; class=&quot;headerlink&quot; title=&quot;定位&quot;&gt;&lt;/a&gt;定位&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;浏览器会将绝对定位元素从流中完全删除，然后将这个元素放在指定位置上。位置可以通过&lt;code&gt;top&lt;/code&gt;、&lt;code&gt;bottom&lt;/code&gt;、&lt;code&gt;left&lt;/code&gt;、&lt;code&gt;right&lt;/code&gt;这几个属性来指定相对于最近已定位的祖宗元素的偏移。&lt;/li&gt;
&lt;li&gt;流中的块元素和内联元素会忽略绝对定位元素正常流入页面，和float有区别&lt;/li&gt;
&lt;li&gt;绝对定位不用指定元素宽度。&lt;/li&gt;
&lt;li&gt;每个定位元素（绝对、相对和固定定位）都有一个&lt;code&gt;z-index&lt;/code&gt;属性，这会指定它在一个虚拟的z轴上的位置，&lt;code&gt;z-index&lt;/code&gt;值越大，元素越出现在屏幕的上层，&lt;code&gt;z-index&lt;/code&gt;可以为负值&lt;/li&gt;
&lt;li&gt;&lt;p&gt;position属性值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;static：静态定位（默认值），元素会放在正常的文档流中，由浏览器决定决定这些静态定位元素的位置而不是你&lt;/li&gt;
&lt;li&gt;absolute：绝对定位，浏览器将其从文档流中删除，并相对于最近已定位的祖宗元素来定位&lt;/li&gt;
&lt;li&gt;fixed：固定定位，浏览器将元素放在相对于浏览器窗口的一个位置上（而不是页面），所以固定元素永远不会移动&lt;/li&gt;
&lt;li&gt;relative：相对定位，会让元素正常流入页面，而定位也是相对于该元素在流中的原有位置进行偏移&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;指定位置时可以使用像素，也可以使用百分比&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;css表格显示&lt;/strong&gt;工作方式与正常表格一样，都有行和列的定义：首先在html中定义表格的行列结构，然后将表结构相应的&lt;em&gt;块元素&lt;/em&gt;的display属性设置为table、table-row、table-cell，就指定了相应元素显示方式为表格、行、列。可以用指定&lt;code&gt;border-spacing&lt;/code&gt;为表格指定外边距，并且不会和紧邻的垂直外边距折叠&lt;/li&gt;
&lt;li&gt;vertical-align用来设置垂直对齐方式，有属性值：top顶部对齐、middle居中对齐、和bottom底部对齐&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;7月14、15、16、17这几天断片了(懒癌发作)，学习也变得闲散起来，总共的学习内容也就差不多平时一天的内容，这里是对这几天学习内容的总结，《Head First HTML &amp;amp; CSS》第11章关于布局和定位讲得非常细致，所以总结的文字也很抽象，需要看书配合图文才
    
    </summary>
    
      <category term="tech" scheme="http://archmee.github.io/categories/tech/"/>
    
    
      <category term="Front End" scheme="http://archmee.github.io/tags/Front-End/"/>
    
  </entry>
  
  <entry>
    <title>前端之旅第 8 天</title>
    <link href="http://archmee.github.io/201607/2016-07-13.html"/>
    <id>http://archmee.github.io/201607/2016-07-13.html</id>
    <published>2016-07-12T16:00:00.000Z</published>
    <updated>2016-07-13T18:17:55.245Z</updated>
    
    <content type="html">&lt;h2 id=&quot;10-div和span&quot;&gt;&lt;a href=&quot;#10-div和span&quot; class=&quot;headerlink&quot; title=&quot;10. div和span&quot;&gt;&lt;/a&gt;10. div和span&lt;/h2&gt;&lt;h3 id=&quot;div&quot;&gt;&lt;a href=&quot;#div&quot; class=&quot;headerlink&quot; title=&quot;div&quot;&gt;&lt;/a&gt;div&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;div是一个&lt;strong&gt;块元素&lt;/strong&gt;，可用于展现页面底层逻辑结构，也以便于为某个逻辑去应用样式&lt;/li&gt;
&lt;li&gt;在页面中使用div，但不要滥用。如果这样做有助于你将页面分解为逻辑区，从而&lt;strong&gt;保证结构清晰并便于指定样式&lt;/strong&gt;，那么可以增加更多的结构，如果只是为了在页面中创建大量结构而增加div，就只会让页面更复杂，而没有任何实际好处。&lt;/li&gt;
&lt;li&gt;width属性只是指定内容区的样式，不包括margin、border和padding，所以整个盒子的宽度是内容区、margin、border和padding的总和&lt;/li&gt;
&lt;li&gt;一个块元素的宽度默认是auto，auto允许内容填满除了内外边距和边框之外的可用空间&lt;/li&gt;
&lt;li&gt;text-align会对块元素中所有内联元素对齐（并非只有文字），而text-align属性只能在块元素上设置，如果直接在内联元素上使用，则不起作用。text-align属性可以被继承（这点很重要）&lt;/li&gt;
&lt;li&gt;line-height属性有一点特殊，如果直接使用一个数字作为它的值，而不是一个度量单位，则该元素会基于文本自己所在的行字体的大小的倍数作为行高。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;div允许你为&lt;em&gt;块级内容&lt;/em&gt;建立逻辑划分，span元素则采用类似方法建立&lt;em&gt;内联内容&lt;/em&gt;的逻辑分组。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果一个&lt;em&gt;内联元素&lt;/em&gt;四周都增加外边距，只能看到左边和右边增加了空间。你也可以对内联元素上边和下边增加内边距，不过这个内边距不会影响包围它的其他内联元素的间距，所以内边距会与其他内联元素重叠。&lt;br&gt;图像也是内联元素，但是它的宽度、内边距和外边距属性表现都更像是块元素。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;font&quot;&gt;&lt;a href=&quot;#font&quot; class=&quot;headerlink&quot; title=&quot;font&quot;&gt;&lt;/a&gt;font&lt;/h3&gt;&lt;p&gt;font属性的简写形式：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;font: font-style font-variant font-weight font-size/line-height font-family;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt; 前3个属性是可选的，它们必须出现在font-size前面，font-size必须指定，line-height是可选的，多个字体要在font-family之间用逗号分隔。&lt;/p&gt;
&lt;h3 id=&quot;伪类&quot;&gt;&lt;a href=&quot;#伪类&quot; class=&quot;headerlink&quot; title=&quot;伪类&quot;&gt;&lt;/a&gt;伪类&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;它允许你根据浏览器的决定来指定这些元素的样式。&lt;/li&gt;
&lt;li&gt;它为你提供了有效的方法，可以根据访问者使用页面时发生的情况来对元素指定样式&lt;/li&gt;
&lt;li&gt;对于a元素的伪类，一般认为适当的顺序为：link、visited、hover、focus、active&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;层叠&quot;&gt;&lt;a href=&quot;#层叠&quot; class=&quot;headerlink&quot; title=&quot;层叠&quot;&gt;&lt;/a&gt;层叠&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;给定样式表中的一组样式，浏览器就是以层叠方式来确定具体使用哪一个样式。&lt;/li&gt;
&lt;li&gt;浏览器应用样式的优先级是网页开发者、网页访问者（基本不会有访问者建立自己的样式表）、浏览器。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;浏览器处理层叠的过程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;收集所有样式表（来自网页开发者、网页访问者、浏览器）&lt;/li&gt;
&lt;li&gt;找到所有匹配的声明&lt;/li&gt;
&lt;li&gt;对所有匹配的规则排序&lt;/li&gt;
&lt;li&gt;按特定性对所有声明排序（按照网页开发者、网页访问者、浏览器分组，再在各自的组中分别计算特定性并排序）&lt;/li&gt;
&lt;li&gt;最后，对于冲突的规则，按照它们在各自样式表中出现的顺序进行排序，并选择后出现的顺序（就近原则）&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;如果css属性最后上加了&lt;code&gt;!important&lt;/code&gt;，则它的优先级最高，会覆盖其他样式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关于特定性的计算，在我前面的博客中记录过一种方式，和这本书的方式稍有差别，我将其统一为&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择器包含一个id+100&lt;/li&gt;
&lt;li&gt;选择器包含一个类或者伪类+10&lt;/li&gt;
&lt;li&gt;选择器包含一个元素+1&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;按上述方法累加的总和就是该选择器的特定性值，对于有相同特定性的元素，则根据样式表中的顺序再次排序。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;疑问？&quot;&gt;&lt;a href=&quot;#疑问？&quot; class=&quot;headerlink&quot; title=&quot;疑问？&quot;&gt;&lt;/a&gt;疑问？&lt;/h3&gt;&lt;p&gt;如果经过所有步骤还是没有找到特定属性的属性值，就使用继承机制，如果该属性不能被继承，则使用浏览器的默认样式。&lt;br&gt;这段话是我对书上一段对话的概括，本来层叠这一点书上讲的就比较混乱，看了这段话更加疑惑了，一是不知道他所谓的所有步骤是针对某一层来说，还是针对上面讲的所有步骤，因为前面已经收集了所有来自几个层次的样式表，并且排了序，现在应该就排序过后的样式进行应用，怎么又扯到继承，又用到了浏览器默认样式？&lt;br&gt;我认为作者这段话是用在在计算网页开发者这一层样式的特定性的时候的结尾的。也有可能就是在网页开发者、网页访问者、浏览器这三个层面都没有找到特定属性，再利用继承和浏览器默认样式。&lt;br&gt;不知道这样理解对不对，希望以后回来解答。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;10-div和span&quot;&gt;&lt;a href=&quot;#10-div和span&quot; class=&quot;headerlink&quot; title=&quot;10. div和span&quot;&gt;&lt;/a&gt;10. div和span&lt;/h2&gt;&lt;h3 id=&quot;div&quot;&gt;&lt;a href=&quot;#div&quot; class=&quot;
    
    </summary>
    
      <category term="tech" scheme="http://archmee.github.io/categories/tech/"/>
    
    
      <category term="Front End" scheme="http://archmee.github.io/tags/Front-End/"/>
    
  </entry>
  
  <entry>
    <title>前端之旅第 7 天</title>
    <link href="http://archmee.github.io/201607/2016-07-12.html"/>
    <id>http://archmee.github.io/201607/2016-07-12.html</id>
    <published>2016-07-11T16:00:00.000Z</published>
    <updated>2016-07-12T19:19:52.560Z</updated>
    
    <content type="html">&lt;h2 id=&quot;9-盒模型&quot;&gt;&lt;a href=&quot;#9-盒模型&quot; class=&quot;headerlink&quot; title=&quot;9. 盒模型&quot;&gt;&lt;/a&gt;9. 盒模型&lt;/h2&gt;&lt;h3 id=&quot;padding、margin、border&quot;&gt;&lt;a href=&quot;#padding、margin、border&quot; class=&quot;headerlink&quot; title=&quot;padding、margin、border&quot;&gt;&lt;/a&gt;padding、margin、border&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;盒子由内容区、内边距、边框、外边距构成&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Archmee/lkd2d97zvb5fvz89feyhwr98v/master/gitblog/images/01-16-43.jpg&quot; alt=&quot;box model from book&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;内容区被可选的透明内边距包围，内边距会将内容和边框隔开&lt;/li&gt;
&lt;li&gt;内边距周围可能放着一个可选的边框&lt;/li&gt;
&lt;li&gt;有一个可选的透明外边距包围着边框，外边距用于在页面上的不同元素之间增加空间。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;内边距和外边距之间有一个区别：元素的背景颜色或背景图像会延伸到内边距下面，但不会延伸到外边距。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;css指定内边距用padding，边框用border，外边距用margin，每一个又可以单独指定上、右、下、左顺时针的四个方向的值，如&lt;code&gt;margin-right:100px&lt;/code&gt;，但border由于要指定多个值，所以使用方式更灵活&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;border 是简写，可以指定4个方向的border都使用相同值，border-width、border-color、border-style是全写形式。&lt;/li&gt;
&lt;li&gt;border-top可以指定上面的border样式，但这仍然是一种简写形式，可以采用全写border-top-width、border-top-color、border-top-style来分别指定，且4个方向都采用同样规则&lt;/li&gt;
&lt;li&gt;border-width可以使用像素，也可以使用关键字thin(细)、medium(中)和thick(粗)，但是关键字方式根据浏览器会有不同表现。&lt;/li&gt;
&lt;li&gt;&lt;ul&gt;
&lt;li&gt;border-style（包括其他简写全写形式） 可用样式：solid(实线)、double(双线)、groov(槽线)、outset(外凸)、inset(内凹)、ridge(脊线)、dotted(虚线)、dashed(破折线)，&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;border-radius是css3用来指定边框圆角的属性，全写可以指定一个盒子四个角的圆角，一般使用像素值，要具体指定某一个角的值可以用全写，如&lt;code&gt;border-top-left-radius:3px;&lt;/code&gt;，另外几个角top-right、bottom-left、bottom-right使用相同的规则&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;background&quot;&gt;&lt;a href=&quot;#background&quot; class=&quot;headerlink&quot; title=&quot;background&quot;&gt;&lt;/a&gt;background&lt;/h3&gt;&lt;p&gt;background是插入背景图像的简写形式，也可以分别指定：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;background-image 指定背景图像url&lt;/li&gt;
&lt;li&gt;background-position 指定背景图像的相对位置，可以使用像素和百分数，还可以使用关键字top、bottom、left、right和center&lt;/li&gt;
&lt;li&gt;background-repeat 指定图像是否重复，repeat表示重复，no-repeat表示不重复，repeat-x只在x方向重复，repeat-y只在y方向重复，inherit表示按照父元素的方式处理。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;关于使用background-image和用img插入图像可以这样考虑，img是用来插入照片或logo等图像，而background-image是用来增强页面表现样式用的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;id&quot;&gt;&lt;a href=&quot;#id&quot; class=&quot;headerlink&quot; title=&quot;id&quot;&gt;&lt;/a&gt;id&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;id只能指定页面中的一个元素&lt;/li&gt;
&lt;li&gt;class要以字母开头，而id可以以数字或字母开头&lt;/li&gt;
&lt;li&gt;id只是一个元素的唯一标识符，不过这并不妨碍这个元素属于一个或多个类，即指定了id的元素仍然可以指定class。&lt;/li&gt;
&lt;li&gt;如果想对多个元素使用某个样式，就要用class，但如果只想给一个特定的元素加入样式，或者页面上只有一个元素，就应该使用id。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;媒体查询&quot;&gt;&lt;a href=&quot;#媒体查询&quot; class=&quot;headerlink&quot; title=&quot;媒体查询&quot;&gt;&lt;/a&gt;媒体查询&lt;/h3&gt;&lt;p&gt;媒体查询可以针对将要显示页面的设备类型来调整页面的样式。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;用link标记指定相应设备的样式文件，这样可以给指定设备指定单独的css文件，比如&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;lounge.css&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;media&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;screen&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--针对屏幕设备--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;lounge-mobile.css&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;media&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;screen and (max-device-width: 480px)&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--针对屏幕宽度不超过480px的设备--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;也可以在css文件中针对相应设备使用媒体查询，但是这样会导致css文件变得庞大&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;at_rule&quot;&gt;@&lt;span class=&quot;keyword&quot;&gt;media&lt;/span&gt; screen and (max-device-width: &lt;span class=&quot;number&quot;&gt;480px&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*针对屏幕宽度不超过480px的设备指定css样式*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;at_rule&quot;&gt;@&lt;span class=&quot;keyword&quot;&gt;media&lt;/span&gt; print &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*针对打印机指定css样式*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*这里可以写所有设备通用的规则*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;查询中还有很多属性可以使用，如min-device-width以及设备的方向orientation&lt;/li&gt;
&lt;li&gt;max-device-width和min-device-width媒体属性依赖于设备的实际屏幕而不是你的浏览器窗口宽度，而max-width和min-width则表示浏览器窗口的最大和最小宽度而不是屏幕大小。&lt;/li&gt;
&lt;li&gt;可以在&lt;a href=&quot;http://www.w3.org/TR/css3-mediaqueries&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.w3.org/TR/css3-mediaqueries&lt;/a&gt; 网站了解css3媒体查询规范细节&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;IE8以及以前版本浏览器不支持媒体查询&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;其他&quot;&gt;&lt;a href=&quot;#其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;line-height用于指定行间距&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;感悟&quot;&gt;&lt;a href=&quot;#感悟&quot; class=&quot;headerlink&quot; title=&quot;感悟&quot;&gt;&lt;/a&gt;感悟&lt;/h2&gt;&lt;p&gt;感觉每天写博客总结都要浪费好多时间……&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;9-盒模型&quot;&gt;&lt;a href=&quot;#9-盒模型&quot; class=&quot;headerlink&quot; title=&quot;9. 盒模型&quot;&gt;&lt;/a&gt;9. 盒模型&lt;/h2&gt;&lt;h3 id=&quot;padding、margin、border&quot;&gt;&lt;a href=&quot;#padding、margin、bor
    
    </summary>
    
      <category term="tech" scheme="http://archmee.github.io/categories/tech/"/>
    
    
      <category term="Front End" scheme="http://archmee.github.io/tags/Front-End/"/>
    
  </entry>
  
  <entry>
    <title>前端之旅第 6 天</title>
    <link href="http://archmee.github.io/201607/2016-07-11.html"/>
    <id>http://archmee.github.io/201607/2016-07-11.html</id>
    <published>2016-07-11T14:56:00.000Z</published>
    <updated>2016-07-11T20:06:23.319Z</updated>
    
    <content type="html">&lt;p&gt;下面是今天学习《Head First HTML &amp;amp; CSS》第7、8章的学习笔记&lt;/p&gt;
&lt;h2 id=&quot;第7章-CSS入门&quot;&gt;&lt;a href=&quot;#第7章-CSS入门&quot; class=&quot;headerlink&quot; title=&quot;第7章. CSS入门&quot;&gt;&lt;/a&gt;第7章. CSS入门&lt;/h2&gt;&lt;h3 id=&quot;添加CSS的3种方法&quot;&gt;&lt;a href=&quot;#添加CSS的3种方法&quot; class=&quot;headerlink&quot; title=&quot;添加CSS的3种方法&quot;&gt;&lt;/a&gt;添加CSS的3种方法&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;内嵌样式：可以直接在标签里面写样式 &lt;code&gt;&amp;lt;p style=&amp;quot;color:red;...&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;内联样式：在head标签里 &lt;code&gt;&amp;lt;style&amp;gt; css样式 &amp;lt;/style&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;外部样式：在head标签里以文件方式包含进来 &lt;code&gt;&amp;lt;link type=&amp;quot;text/css&amp;quot; rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;css样式文件&amp;quot;&amp;gt;&lt;/code&gt;，在html5中已经不需要type属性，因为样式表目前只有css&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;以上3种方法优先级依次从高到低，但是推荐顺序从低到高&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;继承和覆盖继承&quot;&gt;&lt;a href=&quot;#继承和覆盖继承&quot; class=&quot;headerlink&quot; title=&quot;继承和覆盖继承&quot;&gt;&lt;/a&gt;继承和覆盖继承&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;继承是指从父元素那里继承样式，不是所有样式都能继承，一部分如&lt;code&gt;font-family&lt;/code&gt;等可以继承，而&lt;code&gt;border&lt;/code&gt;就不可继承。一般来说会影响文本外观的样式都能继承。&lt;/li&gt;
&lt;li&gt;覆盖继承是指在子元素中使用了和父元素重复的样式规则，那么子元素的样式就会覆盖父元素的样式。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;其他知识点&quot;&gt;&lt;a href=&quot;#其他知识点&quot; class=&quot;headerlink&quot; title=&quot;其他知识点&quot;&gt;&lt;/a&gt;其他知识点&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;CSS使用&lt;code&gt;/*这是注释*/&lt;/code&gt;这样的格式来注释&lt;/li&gt;
&lt;li&gt;多个选择器应用同样的样式用&lt;code&gt;,&lt;/code&gt;号隔开&lt;/li&gt;
&lt;li&gt;一个元素可以加入多个类(class)，只需要把各个类名放在class属性中，并且用空格隔开即可，而且顺序并不重要，因为就算规则冲突，也是根据css文件中出现的顺序而不是这个顺序。如果你希望一个元素拥有不同类中定义的不同样式，那么就要使用多个类。&lt;/li&gt;
&lt;li&gt;如果多个选择器选择一个元素，就会发生冲突，如果一个规则比其他规则更“特定”，就胜出。&lt;/li&gt;
&lt;li&gt;如果由于两个选择器有相同的特定性而无法解决冲突，就要利用CSS文件中规则的先后顺序(就近原则)来解决问题，往往是越靠后越优胜。&lt;/li&gt;
&lt;li&gt;W3C CSS验证工具：&lt;a href=&quot;http://jigsaw.w3.org/css-validator&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://jigsaw.w3.org/css-validator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;第8章-增加字体和颜色样式&quot;&gt;&lt;a href=&quot;#第8章-增加字体和颜色样式&quot; class=&quot;headerlink&quot; title=&quot;第8章. 增加字体和颜色样式&quot;&gt;&lt;/a&gt;第8章. 增加字体和颜色样式&lt;/h2&gt;&lt;h3 id=&quot;字体样式&quot;&gt;&lt;a href=&quot;#字体样式&quot; class=&quot;headerlink&quot; title=&quot;字体样式&quot;&gt;&lt;/a&gt;字体样式&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;font-family 指定页面中使用的字体，可以指定特定的字体，也可以指定某一字体系列。font-family字体系列有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Sans-serif&lt;/strong&gt; 无衬线字体系列，计算机屏幕上更易读&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Serif&lt;/strong&gt; 衬线字体系列，适用于印刷品&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monospace&lt;/strong&gt;字体系列，每个字符等宽，主要用于显示软件代码&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cursive&lt;/strong&gt;字体系列，类似手写体&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Fantasy&lt;/strong&gt;字体系列包含有某种风格的装饰性字体&lt;/p&gt;
&lt;p&gt;作者推荐方法：&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/*字体生效的顺序是从前往后*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/*推荐使用sans-serif系列字体的方法，先提供候选字体，最后提供字体系列，浏览器会选择该系列的默认字体来显示*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;font-family&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; Verdana, Geneva, Arail, sans-serif&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;如果字体名中间包含空格，则需要用双引号&lt;code&gt;&amp;quot;&lt;/code&gt;将其包围起来，如&lt;code&gt;&amp;quot;Microsoft Yahei&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;font-size 控制字体大小，可以使用的方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;px：实际上是指字体高度（字体最高部分和最低部分之间的距离）&lt;/li&gt;
&lt;li&gt;%：相对于父元素的字体的百分比&lt;/li&gt;
&lt;li&gt;em：和%一样，只是用倍数表示，如1.2em=120%&lt;/li&gt;
&lt;li&gt;关键字：xx-small、x-small、small、medium、large、x-large、xx-large，他们之间是20%的关系，但是具体值基于浏览器默认值&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;作者推荐指定字体方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择一个关键字，指定它作为body规则的字体大小，这相当于页面默认字体大小（如果使用像素，老版本的IE不支持）&lt;/li&gt;
&lt;li&gt;使用em或%，相对于body字体大小指定其他元素的字体大小&lt;br&gt;作者认为这样做的好处是，所有字体都会基于浏览器字体大小进行相对调整。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;color 设置字体颜色，实际上它控制着一个元素的前景色，包括边框等…&lt;/li&gt;
&lt;li&gt;font-style 指定字体倾斜，none、italic和oblique，italic和oblique在不同浏览器可能会有不同表现&lt;/li&gt;
&lt;li&gt;font-weight 影响字体粗细，lighter、normal、bold、bolder、100~900之间100的倍数数值（未广泛支持）&lt;/li&gt;
&lt;li&gt;text-decoration 增加更多文本风格，none、underline、overline、line-through。除了第一个外的在同一条规则中可以叠加使用，如&lt;code&gt;text-decoration: underline overline;&lt;/code&gt;，如果写在多个样式中，则会覆盖显示&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Web字体&quot;&gt;&lt;a href=&quot;#Web字体&quot; class=&quot;headerlink&quot; title=&quot;Web字体&quot;&gt;&lt;/a&gt;Web字体&lt;/h3&gt;&lt;p&gt;由于不确定用户是否安装了指定字体，所以如果希望用户使用统一字体，则可以采用Web字体。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Web开放字体格式：简称woff（Web Open Font Format），文件后缀&lt;code&gt;.woff&lt;/code&gt;，woff是作为Web字体的标准字体格式出现的。&lt;/li&gt;
&lt;li&gt;常用web字体：&lt;ul&gt;
&lt;li&gt;TureType字体: .ttf&lt;/li&gt;
&lt;li&gt;OpenType字体: .otf(建立在TureType基础之上)&lt;/li&gt;
&lt;li&gt;Embedded OpenType字体: .eot(OpenType的一种压缩形式，仅IE支持)&lt;/li&gt;
&lt;li&gt;SVG字体: .svg(通用图像格式)&lt;/li&gt;
&lt;li&gt;Web开放字体: .woff(建立在TureType基础之上，已经发展为标准)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;为页面添加web字体：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在服务器上保存你想使用的字体(或用托管服务)&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在css文件中添加@font-face规则，这是css一个比较新的特性。@font-face是一个内置的css规则，而不是一个选择器规则。&lt;/p&gt;
 &lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;at_rule&quot;&gt;@&lt;span class=&quot;keyword&quot;&gt;font-face&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;font-family&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;string&quot;&gt;&quot;指定字体名&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;function&quot;&gt;url&lt;/span&gt;(http://x.svg),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;function&quot;&gt;url&lt;/span&gt;(http://x.woff)&lt;/span&gt;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;/*src可以指定多个字体位置的url，用逗号分隔*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在你想使用该字体的地方用font-family规则指定 &lt;code&gt;{ font-family: &amp;quot;你指定的字体名&amp;quot;; }&lt;/code&gt;，这个名字是你在font-face规则中定义的字体名。&lt;/p&gt;
&lt;p&gt;如果要使用多个字体，则要创建多个@font-face，而且要分别指定唯一的名字。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：移动设备和小型设备并不支持web字体&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;@font-face是一个内置规则，@import和@media也是内置的规则，@import允许导入其他CSS文件，@media允许创建特定于某些“媒体”类型的CSS规则&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Web颜色&quot;&gt;&lt;a href=&quot;#Web颜色&quot; class=&quot;headerlink&quot; title=&quot;Web颜色&quot;&gt;&lt;/a&gt;Web颜色&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;rgb（red green blue）是3基色，可以按不同比例混合出任何一种其他颜色&lt;/li&gt;
&lt;li&gt;有4种方法给css规则指定颜色&lt;ol&gt;
&lt;li&gt;颜色名：&lt;code&gt;color: orange;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;3基色百分比：&lt;code&gt;color: rgb(80%, 40%, 0%);&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;3基色数值（0-255之间）：&lt;code&gt;color: rgb(204, 102, 12);&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;十六进制码：&lt;code&gt;color: #cc6600;&lt;/code&gt;（每2位代表rgb的0-255的数值的十六进制，从左至右依次是&lt;strong&gt;红、绿、蓝&lt;/strong&gt;，如果每组分量中两位数字都相同，则可以简写，#cc6600可以简写#c60，而#cc6610就不可以）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;其他知识点-1&quot;&gt;&lt;a href=&quot;#其他知识点-1&quot; class=&quot;headerlink&quot; title=&quot;其他知识点&quot;&gt;&lt;/a&gt;其他知识点&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;用来强调，&lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;用来特别强调&lt;/li&gt;
&lt;li&gt;一般来说，h1是默认字体大小的200%，h2是150%，h3是120%，h4是100%，h5是90%，h6是60%。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;下面是今天学习《Head First HTML &amp;amp; CSS》第7、8章的学习笔记&lt;/p&gt;
&lt;h2 id=&quot;第7章-CSS入门&quot;&gt;&lt;a href=&quot;#第7章-CSS入门&quot; class=&quot;headerlink&quot; title=&quot;第7章. CSS入门&quot;&gt;&lt;/a&gt;第7章. C
    
    </summary>
    
      <category term="tech" scheme="http://archmee.github.io/categories/tech/"/>
    
    
      <category term="Front End" scheme="http://archmee.github.io/tags/Front-End/"/>
    
  </entry>
  
  <entry>
    <title>前端之旅第 5 天</title>
    <link href="http://archmee.github.io/201607/2016-07-10.html"/>
    <id>http://archmee.github.io/201607/2016-07-10.html</id>
    <published>2016-07-09T16:00:00.000Z</published>
    <updated>2016-07-10T18:08:13.145Z</updated>
    
    <content type="html">&lt;p&gt;其实回头看前几天的学习内容比较杂乱，导致耗费了一些不必要的精力，其实现在最应该做的是先系统的看点书，但由于我还有点前端基础，而且早上不想看书的特点，估计后面还是会学习网上的课程，下午和晚上的时间用于看书和写博客。&lt;br&gt;下面只有今天学习 《Head First HTML &amp;amp; CSS》第5、6章的笔记&lt;/p&gt;
&lt;h2 id=&quot;第5章-为你的页面增加图像&quot;&gt;&lt;a href=&quot;#第5章-为你的页面增加图像&quot; class=&quot;headerlink&quot; title=&quot;第5章. 为你的页面增加图像&quot;&gt;&lt;/a&gt;第5章. 为你的页面增加图像&lt;/h2&gt;&lt;h3 id=&quot;JPEG、PNG和GIF的对比&quot;&gt;&lt;a href=&quot;#JPEG、PNG和GIF的对比&quot; class=&quot;headerlink&quot; title=&quot;JPEG、PNG和GIF的对比&quot;&gt;&lt;/a&gt;JPEG、PNG和GIF的对比&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;JPEG&lt;/th&gt;
&lt;th&gt;PNG&lt;/th&gt;
&lt;th&gt;GIF&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;适合连续色调图像，如照片&lt;/td&gt;
&lt;td&gt;适合单色图像和线条构成的图像&lt;/td&gt;
&lt;td&gt;和PNG类似，适合于单色图像和线条构成的图像&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;可以表示包含多达千万种不同颜色的图像&lt;/td&gt;
&lt;td&gt;可以表示包含上百万种不同颜色的图像，PNG有3种：PNG-8、PNG-24、PNG-32&lt;/td&gt;
&lt;td&gt;GIF可以表示最多256种不同颜色的图像&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;“有损”压缩&lt;/td&gt;
&lt;td&gt;“无损”压缩&lt;/td&gt;
&lt;td&gt;也是一种“无损”压缩格式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;不支持透明度&lt;/td&gt;
&lt;td&gt;支持透明度&lt;/td&gt;
&lt;td&gt;支持透明度，不过只允许一种颜色设置为透明&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;文件比较小，以便Web页面更高效的显示&lt;/td&gt;
&lt;td&gt;与相应JPEG相比，PNG文件更大一些，和GIF相比则取决于使用的颜色数&lt;/td&gt;
&lt;td&gt;GIF通常比相应JPEG文件大&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;不支持动画&lt;/td&gt;
&lt;td&gt;支持动画(只有firefox)&lt;/td&gt;
&lt;td&gt;支持动画&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;lt-img-gt-的其他知识点&quot;&gt;&lt;a href=&quot;#lt-img-gt-的其他知识点&quot; class=&quot;headerlink&quot; title=&quot;&amp;lt;img&amp;gt; 的其他知识点&quot;&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 的其他知识点&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;浏览器通常会同时获取多个图像&lt;/li&gt;
&lt;li&gt;如果在&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;中提供了width和height，浏览器在显示图像之前就开始建立页面布局，否则浏览器在布局后才知道图像大小，则会重新调整页面布局。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;提供的width和height并不影响下载图像的大小，图像仍然按照原始尺寸大小下载下来，并通过width和height在页面上缩放，并不是会下载更小尺寸的图片。&lt;/li&gt;
&lt;li&gt;浏览器是在下载了html文件并开始显示页面后才下载图像，所以事先它并不知道图像大小。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;是内联元素。&lt;/li&gt;
&lt;li&gt;蒙版是图形编辑工具用颜色来&lt;strong&gt;柔化&lt;/strong&gt;文本边缘的功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;第6章-标准及其他&quot;&gt;&lt;a href=&quot;#第6章-标准及其他&quot; class=&quot;headerlink&quot; title=&quot;第6章. 标准及其他&quot;&gt;&lt;/a&gt;第6章. 标准及其他&lt;/h2&gt;&lt;h3 id=&quot;DOCTYPE-类型&quot;&gt;&lt;a href=&quot;#DOCTYPE-类型&quot; class=&quot;headerlink&quot; title=&quot;DOCTYPE 类型&quot;&gt;&lt;/a&gt;DOCTYPE 类型&lt;/h3&gt;&lt;p&gt;文档类型定义（doctype）用来告诉浏览器使用的HTML版本&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;html4.01 doctype:&lt;/p&gt;
 &lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;doctype&quot;&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot; &quot;http://www.w3.org//TR/html4/strict.dtd&quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xhtml doctype:&lt;/p&gt;
 &lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;doctype&quot;&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.1//EN&quot; &quot;http://www.w3.org//TR/xhtml11/DTD/xhtml11.dtd&quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;html5 doctype&lt;/p&gt;
 &lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;doctype&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 当浏览器看到这个doctype时，它就认为你在使用标准的HTML，不再考虑版本号，也不考虑标准在什么位置。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;HTML5相比HTML4-01的改进&quot;&gt;&lt;a href=&quot;#HTML5相比HTML4-01的改进&quot; class=&quot;headerlink&quot; title=&quot;HTML5相比HTML4.01的改进&quot;&gt;&lt;/a&gt;HTML5相比HTML4.01的改进&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;HTML5提供了更多的元素和属性&lt;/li&gt;
&lt;li&gt;它有很多新特性，允许Web开发人员用HTML5创建Web应用&lt;/li&gt;
&lt;li&gt;HTML5规范比以前的版本健壮得多&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;其他知识点&quot;&gt;&lt;a href=&quot;#其他知识点&quot; class=&quot;headerlink&quot; title=&quot;其他知识点&quot;&gt;&lt;/a&gt;其他知识点&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;html标准将变成一个活的标准，不再有6、7、8等版本，这就意味着它会根据需要继续发展和变化，不再需要固定的版本号。&lt;/li&gt;
&lt;li&gt;html标准具有向后兼容性(backwards compatibility)，意味着我们可以向html增加新的内容，浏览器在支持新的内容的同时，也会支持原来的内容。&lt;/li&gt;
&lt;li&gt;w3c html验证工具：&lt;a href=&quot;http://validator.w3.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://validator.w3.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;html5中通过meta指定字符编码&lt;code&gt;&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;&lt;/code&gt;，相比之前&lt;code&gt;&amp;lt;meta http-equiv=&amp;quot;Content-Type&amp;quot; content=&amp;quot;text/html;charset=utf-8&amp;quot;&amp;gt;&lt;/code&gt;方式要简单很多&lt;/li&gt;
&lt;li&gt;html文件编码要和页面指定的编码一致。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;其实回头看前几天的学习内容比较杂乱，导致耗费了一些不必要的精力，其实现在最应该做的是先系统的看点书，但由于我还有点前端基础，而且早上不想看书的特点，估计后面还是会学习网上的课程，下午和晚上的时间用于看书和写博客。&lt;br&gt;下面只有今天学习 《Head First HTML &amp;
    
    </summary>
    
      <category term="tech" scheme="http://archmee.github.io/categories/tech/"/>
    
    
      <category term="Front End" scheme="http://archmee.github.io/tags/Front-End/"/>
    
  </entry>
  
  <entry>
    <title>前端之旅第 4 天</title>
    <link href="http://archmee.github.io/201607/2016-07-09.html"/>
    <id>http://archmee.github.io/201607/2016-07-09.html</id>
    <published>2016-07-08T16:00:00.000Z</published>
    <updated>2016-07-29T06:31:26.184Z</updated>
    
    <content type="html">&lt;p&gt;在慕课网上学习&lt;a href=&quot;http://www.imooc.com/learn/9&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTML+CSS基础课程&lt;/a&gt;时记录了一些关键点。可能学完这个课程会给你已经学会了html和css的错觉，但其实这个课程真正的作用只在于让你初步的认识html和css，更深入的知识需要看书和实践才能获得。&lt;/p&gt;
&lt;h2 id=&quot;HTML&quot;&gt;&lt;a href=&quot;#HTML&quot; class=&quot;headerlink&quot; title=&quot;HTML&quot;&gt;&lt;/a&gt;HTML&lt;/h2&gt;&lt;h3 id=&quot;何为语义化？&quot;&gt;&lt;a href=&quot;#何为语义化？&quot; class=&quot;headerlink&quot; title=&quot;何为语义化？&quot;&gt;&lt;/a&gt;何为语义化？&lt;/h3&gt;&lt;p&gt;语义化。说的通俗点就是：明白每个标签的用途（在什么情况下使用此标签合理）比如，网页上的文章的标题就可以用标题标签，网页上的各个栏目的栏目名称也可以使用标题标签。文章中内容的段落就得放在段落标签中，在文章中有想强调的文本，就可以使用 em 标签表示强调等等。&lt;/p&gt;
&lt;p&gt;但是语义化可以给我们带来什么样的好处呢？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;更容易被搜索引擎收录&lt;/li&gt;
&lt;li&gt;更容易让屏幕阅读器读出网页内容&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;lt-em-gt-、-lt-strong-gt-和-lt-span-gt&quot;&gt;&lt;a href=&quot;#lt-em-gt-、-lt-strong-gt-和-lt-span-gt&quot; class=&quot;headerlink&quot; title=&quot;&amp;lt;em&amp;gt;、&amp;lt;strong&amp;gt;和&amp;lt;span&amp;gt;&quot;&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;和&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;和&lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;标签是为了强调一段话中的关键字时使用，它们的语义是强调。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;标签是没有语义的，它的作用就是为了设置单独的样式用的。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;lt-code-gt-和-lt-pre-gt-的区别&quot;&gt;&lt;a href=&quot;#lt-code-gt-和-lt-pre-gt-的区别&quot; class=&quot;headerlink&quot; title=&quot;&amp;lt;code&amp;gt; 和 &amp;lt;pre&amp;gt;的区别&quot;&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;的区别&lt;/h3&gt;&lt;p&gt;当代码为一行代码时，你可以使用&lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt;标签，如果是多行代码，可以使用&lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;标签。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：&lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;标签不只是为显示计算机的源代码时用的，在你需要在网页中预显示格式时都可以使用它，只是&lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;标签的一个常见应用就是用来展示计算机的源代码。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;lt-table-gt-表格&quot;&gt;&lt;a href=&quot;#lt-table-gt-表格&quot; class=&quot;headerlink&quot; title=&quot;&amp;lt;table&amp;gt;表格&quot;&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;表格&lt;/h3&gt;&lt;p&gt;&lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;：定义表格&lt;br&gt;&lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt;：定义行&lt;br&gt;&lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt;：定义表头&lt;br&gt;&lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt;：定义单元格&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt;：当表格内容非常多时，表格会下载一点显示一点，但如果加上&lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt;标签后，这个表格就要等表格内容全部下载完才会显示。如右侧代码编辑器中的代码。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;summary&lt;/code&gt;属性，摘要的内容是不会在浏览器中显示出来的。它的作用是增加表格的可读性(语义化)，使搜索引擎更好的读懂表格内容，还可以使屏幕阅读器更好的帮助特殊用户读取表格内容。&lt;br&gt;语法：&lt;code&gt;&amp;lt;table summary=&amp;quot;表格简介文本&amp;quot;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;caption&amp;gt;&lt;/code&gt;用以描述表格标题，该标签必须紧随 table 标签之后，默认显示位置：表格上方。&lt;/p&gt;
&lt;h3 id=&quot;mailto属性&quot;&gt;&lt;a href=&quot;#mailto属性&quot; class=&quot;headerlink&quot; title=&quot;mailto属性&quot;&gt;&lt;/a&gt;mailto属性&lt;/h3&gt;&lt;p&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;元素的&lt;code&gt;mailto&lt;/code&gt;属性&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Archmee/lkd2d97zvb5fvz89feyhwr98v/master/gitblog/images/about-a-mailto.jpg&quot; alt=&quot;mailto,图片来自慕课网&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：如果mailto后面同时有多个参数的话，第一个参数必须以&lt;code&gt;?&lt;/code&gt;号开头，后面的参数每一个都以&lt;code&gt;&amp;amp;&lt;/code&gt;号分隔。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;CSS&quot;&gt;&lt;a href=&quot;#CSS&quot; class=&quot;headerlink&quot; title=&quot;CSS&quot;&gt;&lt;/a&gt;CSS&lt;/h2&gt;&lt;h3 id=&quot;CSS样式分类&quot;&gt;&lt;a href=&quot;#CSS样式分类&quot; class=&quot;headerlink&quot; title=&quot;CSS样式分类&quot;&gt;&lt;/a&gt;CSS样式分类&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;内联式：就是把css代码直接写在现有的HTML标签中&lt;/li&gt;
&lt;li&gt;嵌入式：把css样式代码写在&lt;code&gt;&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt;标签之间&lt;/li&gt;
&lt;li&gt;外联式：就是把css代码写在一个单独的外部文件中，这个css样式文件以“.css”为扩展名，在&lt;head&gt;内使用&lt;link&gt;标签将css样式文件链接到HTML文件内&lt;br&gt;三种方式的优先级是：内联式 &amp;gt; 嵌入式 &amp;gt; 外联式（嵌入式&amp;gt;外联式有一个前提：嵌入式css样式的位置一定在外部式的后面）&lt;/head&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;选择器&quot;&gt;&lt;a href=&quot;#选择器&quot; class=&quot;headerlink&quot; title=&quot;选择器&quot;&gt;&lt;/a&gt;选择器&lt;/h3&gt;&lt;h4 id=&quot;分类&quot;&gt;&lt;a href=&quot;#分类&quot; class=&quot;headerlink&quot; title=&quot;分类&quot;&gt;&lt;/a&gt;分类&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;标签选择器其实就是html代码中的标签&lt;/li&gt;
&lt;li&gt;类选器：要先在标签上添加class属性并赋值，然后用&lt;code&gt;.&lt;/code&gt;号+class属性值的方式来使用&lt;/li&gt;
&lt;li&gt;&lt;p&gt;id选择器：要先在标签上定义添加id属性并赋值，然后用&lt;code&gt;#&lt;/code&gt;号+id属性值的方式来使用。&lt;br&gt;类选择器和id选择器的不同点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;id选择器只能在文档中使用一次&lt;/li&gt;
&lt;li&gt;可以使用类选择器词列表方法为一个元素同时设置多个样式。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;子选择器：用&lt;code&gt;&amp;gt;&lt;/code&gt;符号选择指定标签元素的&lt;strong&gt;第一代子元素&lt;/strong&gt;，比如&lt;code&gt;p &amp;gt; span&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;包含（后代）选择器：使用空格选择指定标签元素下的&lt;strong&gt;所有后辈元素&lt;/strong&gt;（注意加粗字体和子选择器的区别）&lt;/li&gt;
&lt;li&gt;通用选择器：是功能最强大的选择器，用&lt;code&gt;*&lt;/code&gt;号指定，它的作用是匹配html中所有标签元素&lt;/li&gt;
&lt;li&gt;伪类选择符：它允许给html不存在的标签（标签的某种状态）设置样式，比如&lt;code&gt;:hover&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;分组选择符：使用&lt;code&gt;,&lt;/code&gt;号来选择多个选择器，它们共享同一种样式&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;选择器权值&quot;&gt;&lt;a href=&quot;#选择器权值&quot; class=&quot;headerlink&quot; title=&quot;选择器权值&quot;&gt;&lt;/a&gt;选择器权值&lt;/h4&gt;&lt;p&gt;标签的权值为1，类选择器的权值为10，ID选择器的权值最高为100。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：还有一个权值比较特殊–继承也有权值但很低，有的文献提出它只有0.1，所以可以理解为继承的权值最低。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;样式层叠&quot;&gt;&lt;a href=&quot;#样式层叠&quot; class=&quot;headerlink&quot; title=&quot;样式层叠&quot;&gt;&lt;/a&gt;样式层叠&lt;/h3&gt;&lt;p&gt;层叠就是在html文件中对于同一个元素可以有多个css样式存在，当有相同权重的样式存在时，会根据这些css样式的前后顺序来决定，处于最后面的css样式会被应用。&lt;/p&gt;
&lt;p&gt;有些特殊的情况需要为某些样式设置具有最高权值，这时候我们可以使用&lt;code&gt;!important&lt;/code&gt;来解决，放在某条需要设定的样式之后，分号之前。&lt;/p&gt;
&lt;p&gt;样式优先级为：浏览器默认的样式 &amp;lt; 网页制作者样式 &amp;lt; 用户自己设置的样式，但记住&lt;code&gt;!important&lt;/code&gt;优先级样式是个例外，权值高于用户自己设置的样式。&lt;/p&gt;
&lt;h3 id=&quot;字体和段落样式&quot;&gt;&lt;a href=&quot;#字体和段落样式&quot; class=&quot;headerlink&quot; title=&quot;字体和段落样式&quot;&gt;&lt;/a&gt;字体和段落样式&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;样式名&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;font-family&lt;/td&gt;
&lt;td&gt;字体&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;font-size&lt;/td&gt;
&lt;td&gt;字体大小&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;font-weight&lt;/td&gt;
&lt;td&gt;字体粗细(bold…)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;font-style&lt;/td&gt;
&lt;td&gt;字体样式(italic…)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;text-decoration&lt;/td&gt;
&lt;td&gt;文本装饰(line-through…)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;text-indent&lt;/td&gt;
&lt;td&gt;段落缩进&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;line-height&lt;/td&gt;
&lt;td&gt;段落行高&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;letter-spacing&lt;/td&gt;
&lt;td&gt;字符间距&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;word-spacing&lt;/td&gt;
&lt;td&gt;单词间距，对汉字无效&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;text-align&lt;/td&gt;
&lt;td&gt;对块元素设置对齐方式&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;今天学完了慕课网的HTML+CSS基础课程前10章，明天继续。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在慕课网上学习&lt;a href=&quot;http://www.imooc.com/learn/9&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTML+CSS基础课程&lt;/a&gt;时记录了一些关键点。可能学完这个课程会给你已经学会了html和css的错觉，但其实这个课
    
    </summary>
    
      <category term="tech" scheme="http://archmee.github.io/categories/tech/"/>
    
    
      <category term="Front End" scheme="http://archmee.github.io/tags/Front-End/"/>
    
  </entry>
  
  <entry>
    <title>前端之旅第 3 天</title>
    <link href="http://archmee.github.io/201607/2016-07-08.html"/>
    <id>http://archmee.github.io/201607/2016-07-08.html</id>
    <published>2016-07-07T16:00:00.000Z</published>
    <updated>2016-07-10T17:59:37.246Z</updated>
    
    <content type="html">&lt;h2 id=&quot;学习-Sublime-Text&quot;&gt;&lt;a href=&quot;#学习-Sublime-Text&quot; class=&quot;headerlink&quot; title=&quot;学习 Sublime Text&quot;&gt;&lt;/a&gt;学习 Sublime Text&lt;/h2&gt;&lt;p&gt;虽然之前一直在用Sublime Text，但却对它很多功能知之甚少，所以上午全都在 &lt;a href=&quot;www.imooc.com&quot;&gt;慕课网&lt;/a&gt; 学习它的 &lt;a href=&quot;http://www.imooc.com/video/5473&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;视频课程&lt;/a&gt;。这门课主要讲了常用的快捷键和一些插件的安装使用，对开发很有帮助，就算暂时用不到，也可以先作为了解。&lt;/p&gt;
&lt;h3 id=&quot;快捷键&quot;&gt;&lt;a href=&quot;#快捷键&quot; class=&quot;headerlink&quot; title=&quot;快捷键&quot;&gt;&lt;/a&gt;快捷键&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;快捷键&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ctrl+p&lt;/td&gt;
&lt;td&gt;goto anything&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl+shift+p&lt;/td&gt;
&lt;td&gt;命令行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl+d&lt;/td&gt;
&lt;td&gt;多行模式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl+k&lt;/td&gt;
&lt;td&gt;多行模式选择时跳过当前项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;alt+f3&lt;/td&gt;
&lt;td&gt;多行模式全选&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alt+.&lt;/td&gt;
&lt;td&gt;可以自动完成html闭合标记,不过有了Emmet插件几乎没什么用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl+p面板中&lt;/td&gt;
&lt;td&gt;1. 输入@可以匹配css选择器   2. 输入#可以匹配html标签&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl+shift+v&lt;/td&gt;
&lt;td&gt;带格式粘贴代码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl+e&lt;/td&gt;
&lt;td&gt;展开emmet语法&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;插件&quot;&gt;&lt;a href=&quot;#插件&quot; class=&quot;headerlink&quot; title=&quot;插件&quot;&gt;&lt;/a&gt;插件&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;插件名&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;sublime httpRequest&lt;/td&gt;
&lt;td&gt;用于调试http请求&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sublime nettus fetch&lt;/td&gt;
&lt;td&gt;稍作配置就可以从网上下载jQuery等库代码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;advancedNewfile&lt;/td&gt;
&lt;td&gt;新建文件的简便方式&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;《Head-First-HTML-amp-CSS》-学习笔记&quot;&gt;&lt;a href=&quot;#《Head-First-HTML-amp-CSS》-学习笔记&quot; class=&quot;headerlink&quot; title=&quot;《Head First HTML &amp;amp; CSS》 学习笔记&quot;&gt;&lt;/a&gt;《Head First HTML &amp;amp; CSS》 学习笔记&lt;/h2&gt;&lt;h3 id=&quot;第4章-连接起来&quot;&gt;&lt;a href=&quot;#第4章-连接起来&quot; class=&quot;headerlink&quot; title=&quot;第4章. 连接起来&quot;&gt;&lt;/a&gt;第4章. 连接起来&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;浏览器中输入的Web地址称为URL，或称统一资源定位符（Uniform Resource Locators）&lt;/li&gt;
&lt;li&gt;单击一个相对链接时，在后台浏览器会根据这个相对路径和所单击页面的路径创建一个绝对路径&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;元素的title属性用来提供链接描述信息，可以为任何元素增加title属性以提供工具提示。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;target属性用来指定打开链接的方法：&lt;br&gt;_blank在新窗口中打开被链接文档&lt;br&gt;_self是默认，在相同的框架中打开被链接文档&lt;br&gt;_parent在父框架集中打开被链接文档&lt;br&gt;_top在整个窗口中打开被链接文档&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;建立锚的方式(用来指定页面中的位置)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;方法1&lt;/em&gt;：在页面中相应位置的元素上加上id属性（id要是唯一的），比如&lt;code&gt;&amp;lt;p id=&amp;quot;bookmark&amp;quot;&amp;gt;&lt;/code&gt;，从其他位置访问此处，只需要在URL最后加上该id即可，本页面跳转时浏览器会把href的值自动加到url链接后面再访问。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;方法2&lt;/em&gt;：在想要定位的位置加上&lt;code&gt;&amp;lt;a name=&amp;quot;bookmark&amp;quot;&amp;gt;...&amp;lt;/a&amp;gt;&lt;/code&gt;, 访问方法相,同，但方法一更常见一点。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;学习-Sublime-Text&quot;&gt;&lt;a href=&quot;#学习-Sublime-Text&quot; class=&quot;headerlink&quot; title=&quot;学习 Sublime Text&quot;&gt;&lt;/a&gt;学习 Sublime Text&lt;/h2&gt;&lt;p&gt;虽然之前一直在用Sublime Te
    
    </summary>
    
      <category term="tech" scheme="http://archmee.github.io/categories/tech/"/>
    
    
      <category term="Front End" scheme="http://archmee.github.io/tags/Front-End/"/>
    
  </entry>
  
  <entry>
    <title>前端之旅第 2 天</title>
    <link href="http://archmee.github.io/201607/2016-07-07.html"/>
    <id>http://archmee.github.io/201607/2016-07-07.html</id>
    <published>2016-07-06T16:00:00.000Z</published>
    <updated>2016-07-10T17:59:46.379Z</updated>
    
    <content type="html">&lt;h2 id=&quot;MDN-的-Web开发入门教程&quot;&gt;&lt;a href=&quot;#MDN-的-Web开发入门教程&quot; class=&quot;headerlink&quot; title=&quot;MDN 的 Web开发入门教程&quot;&gt;&lt;/a&gt;MDN 的 Web开发入门教程&lt;/h2&gt;&lt;p&gt;由于早上起来比较困，所以看书肯定会打瞌睡，所以我决定找点自己在网上收集的资料看一下，然后看到了MDN的 &lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Web开发入门&lt;/a&gt;，通过这个教程你将建立一个构建简单的网页和发布自己的简单的代码的工具。教程共如下8篇：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装基本的软件&lt;/li&gt;
&lt;li&gt;你的网页将呈现什么样子？&lt;/li&gt;
&lt;li&gt;文件处理&lt;/li&gt;
&lt;li&gt;HTML基础&lt;/li&gt;
&lt;li&gt;CSS基础&lt;/li&gt;
&lt;li&gt;JavaScript基础&lt;/li&gt;
&lt;li&gt;发布网站&lt;/li&gt;
&lt;li&gt;网络是怎么工作的？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;学完后我个人感觉这个教程更适合放在第一天。&lt;a href=&quot;https://github.com/mdn/beginner-html-site-scripted&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这个教程在Github上的Demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在这个过程中，因为偷懒，我的代码都是直接在 &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CodePen&lt;/a&gt; 在线编辑测试的，还有另外一个同类型比较有名的是 &lt;a href=&quot;https://jsfiddle.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jsFiddle&lt;/a&gt;，不过我认为CodePen比较好的地方是首页就有很多别人贡献出来的作品，点击即可查看Demo，可供我们参考学习。&lt;/p&gt;
&lt;p&gt;在这个初级教程中的javascript章节解释了一个很经典的问题：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;提示：我们将&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;元素放在 HTML 文件底部的原因是，浏览器解析 HTML 似乎按照代码出现的顺序来的。如果 JavaScript被首先读取，它也应该影响下面的 HTML，但有时会出现问题，因为 JavaScript 会在 HTML 之前被加载，如果 JavaScript 代码出现问题则 HTML 不会被加载。所以将 JavaScript 代码放在底部是最好的选择。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;《Head-First-HTML-amp-CSS》-学习笔记&quot;&gt;&lt;a href=&quot;#《Head-First-HTML-amp-CSS》-学习笔记&quot; class=&quot;headerlink&quot; title=&quot;《Head First HTML &amp;amp; CSS》 学习笔记&quot;&gt;&lt;/a&gt;《Head First HTML &amp;amp; CSS》 学习笔记&lt;/h2&gt;&lt;h3 id=&quot;第2章-深入了解超文本&quot;&gt;&lt;a href=&quot;#第2章-深入了解超文本&quot; class=&quot;headerlink&quot; title=&quot;第2章. 深入了解超文本&quot;&gt;&lt;/a&gt;第2章. 深入了解超文本&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;href属性全称hypertext reference&lt;/li&gt;
&lt;li&gt;属性的值应该用双引号括起来&lt;/li&gt;
&lt;li&gt;html5支持定制数据属性，不过现在对我并没什么（luan）用&lt;/li&gt;
&lt;li&gt;指向一个图像的路径不正确时，会在页面看到一个损坏的图像，所以记得用alt属性来添加说明文字，这样同时也为不支持图像的设备提供了备选信息,增加了可访问性&lt;/li&gt;
&lt;li&gt;关于&lt;strong&gt;相对路径&lt;/strong&gt;和&lt;strong&gt;绝对路径&lt;/strong&gt;(URL)的建议：站内用相对路径，站外用绝对路径&lt;/li&gt;
&lt;li&gt;网站的文件或文件夹名不要使用空格&lt;/li&gt;
&lt;li&gt;最好在建站初期就规划好网站文件结构，这样会省去一些升级网站的麻烦&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;第3章-构建模块&quot;&gt;&lt;a href=&quot;#第3章-构建模块&quot; class=&quot;headerlink&quot; title=&quot;第3章. 构建模块&quot;&gt;&lt;/a&gt;第3章. 构建模块&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;q标签用于短引用，它是内联元素；blockquote用于长引用，它是块元素。q可以嵌套在blockquote里面，但是blockquote嵌套在q则没什么意义&lt;/li&gt;
&lt;li&gt;如br这样没有任何内容的叫做void元素， &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;和&lt;code&gt;&amp;lt;br/&amp;gt;&lt;/code&gt;分别用于HTML和更严格的XHTML，否则两者没什么区别&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt;(ordered list)是&lt;strong&gt;有序列表&lt;/strong&gt;，&lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;(unordered list) 是&lt;strong&gt;无序列表&lt;/strong&gt;，两者可相互嵌套构成多级列表&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;定义列表&lt;/strong&gt;格式为&lt;code&gt;&amp;lt;dl&amp;gt;&amp;lt;dt&amp;gt;定义术语&amp;lt;/dt&amp;gt;&amp;lt;dd&amp;gt;定义描述&amp;lt;/dd&amp;gt;...&amp;lt;/dl&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;字符实体用于在html文件中表示特殊符号，比如用&lt;code&gt;&amp;amp;lt;&lt;/code&gt;来表示&lt;code&gt;&amp;lt;&lt;/code&gt;，&lt;code&gt;&amp;amp;gt&lt;/code&gt;表示&lt;code&gt;&amp;gt;&lt;/code&gt;，&lt;code&gt;&amp;amp;amp&lt;/code&gt;来表示&lt;code&gt;&amp;amp;&lt;/code&gt;。字符实体都有编号，可以使用编号而不是实体名，比如&lt;code&gt;&amp;amp;#100&lt;/code&gt;，更多实体清单在 &lt;a href=&quot;http://www.w3schools.com/tags/ref_entities.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;W3School&lt;/a&gt; 或 &lt;a href=&quot;http://www.unicode.org/charts&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Unicode&lt;/a&gt; 网站可以找到&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; 元素可以用于结构化显示代码。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;MDN-的-Web开发入门教程&quot;&gt;&lt;a href=&quot;#MDN-的-Web开发入门教程&quot; class=&quot;headerlink&quot; title=&quot;MDN 的 Web开发入门教程&quot;&gt;&lt;/a&gt;MDN 的 Web开发入门教程&lt;/h2&gt;&lt;p&gt;由于早上起来比较困，所以看书肯定会打
    
    </summary>
    
      <category term="tech" scheme="http://archmee.github.io/categories/tech/"/>
    
    
      <category term="Front End" scheme="http://archmee.github.io/tags/Front-End/"/>
    
  </entry>
  
  <entry>
    <title>前端之旅七月起航</title>
    <link href="http://archmee.github.io/201607/2016-07-06.html"/>
    <id>http://archmee.github.io/201607/2016-07-06.html</id>
    <published>2016-07-05T16:00:00.000Z</published>
    <updated>2016-07-10T17:58:50.000Z</updated>
    
    <content type="html">&lt;p&gt;今天是7月6号，前端之旅的第一天。&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;从年前被辞退以来，先是花了四个月学习iOS开发，但是这其中由于个人感情原因一直不能集中精力，所以进度很慢，在6月底做完一个简陋的&lt;a href=&quot;https://github.com/Archmee/Dota2Heropedia&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Dota2英雄百科&lt;/a&gt;APP后，决定暂时‘放弃’，并非自己学习能力不足或者没有耐心，只是在学习的过程有了对苹果公司的一些‘偏见’：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;他们打造了闭环的生态和闭源的开发环境，当然这也是他们盈利的模式，但是我不喜欢，这也是iOS开发工资居高不下的主要原因。&lt;/li&gt;
&lt;li&gt;OC语言各种反人类，而且和C语言各种混搭的奇技淫巧，感觉坑略多，没尝试Swift，看了喵神博客据说Swift没看起来那么简单。&lt;/li&gt;
&lt;li&gt;今年的行业危机让我质疑原生App的发展，毕竟用户每天使用的软件就那么几个，而他们打开的网页可以有很多，况且各大行业软件都已经有了领头羊，所以也就意味着不管我以后加入怎样的公司，都只能是维护或优化软件。这几点对以后个人创业十分不利。&lt;/li&gt;
&lt;li&gt;近年越来越流行全栈和全端，javascript和NodeJS大行其道，是未来几年的大方向，而且未来我更看好混合应用的开发模式。所以前面我所谓的‘放弃’是是选择用一种更柔和的方式处理技术冲突。&lt;/li&gt;
&lt;li&gt;更重要的是现在iOS培训批量生产，导致iOS工程师产能过剩，行业已经严重饱和，初级码农太多，中高级仍然一将难求，而我实在没有冒充中高级的能力和信心。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;7月1日，我在微博发了这样一句“不断选择，不断试错，不断纠正，反复迭代”。我想这句话不但适用一个创业公司的发展，对于人生的发展也同样适用。&lt;/p&gt;
&lt;p&gt;这次，我决定尝试一下前端，作为一名几乎工作一年的PHP后端，说完全不懂前端是假的，前端的基础技术html、css和js在平时的开发中也都会用到的，只是没有深入学习过而已，但这次一切都会不一样了。&lt;/p&gt;
&lt;p&gt;我希望我的每一次的放弃都不是真的放弃，那并不具有失败的意义，而是我在有了更好的选择上做了妥协。现在选择走进前端开发并不一定就是说我就给自己的未来固定了方向，我希望趁自己年轻的时候可以多尝试感兴趣的方向，尽量随性一点，而且我觉得未来自己可以尝试的方向还有用户体验交互和界面设计等上，所以现在选的方向也不是盲目选择，而是选择了一种渐进增强的方式。人生且长，随机应变。&lt;/p&gt;
&lt;p&gt;7月7日凌晨，写下此文，加油，未来共勉！&lt;/p&gt;
&lt;h2 id=&quot;《Head-First-HTML-amp-CSS》-学习笔记&quot;&gt;&lt;a href=&quot;#《Head-First-HTML-amp-CSS》-学习笔记&quot; class=&quot;headerlink&quot; title=&quot;《Head First HTML &amp;amp; CSS》 学习笔记&quot;&gt;&lt;/a&gt;《Head First HTML &amp;amp; CSS》 学习笔记&lt;/h2&gt;&lt;p&gt;今天整理了之前收集的前端方面的书签，准备好资源很重要。不过还是先看书要紧。&lt;/p&gt;
&lt;h3 id=&quot;第1章-认识HTML&quot;&gt;&lt;a href=&quot;#第1章-认识HTML&quot; class=&quot;headerlink&quot; title=&quot;第1章. 认识HTML&quot;&gt;&lt;/a&gt;第1章. 认识HTML&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;文件要保存为.html的后缀&lt;/li&gt;
&lt;li&gt;head标签中必须包括title标签&lt;/li&gt;
&lt;li&gt;html所要展现的所有内容必须放在符合相应语义的标签里面&lt;/li&gt;
&lt;li&gt;html是用于&lt;strong&gt;结构&lt;/strong&gt;，CSS(Cascadin Style Sheets)用于&lt;strong&gt;表现&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;在html文件中要注意指定编码，并且要和文件的编码一致&lt;/li&gt;
&lt;li&gt;html的注释是&lt;code&gt;&amp;lt;!--注释--&amp;gt;&lt;/code&gt;,css的注释是&lt;code&gt;/*注释*/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;html5是html的最新版本&lt;/li&gt;
&lt;li&gt;编写html时要把head和body分开&lt;/li&gt;
&lt;li&gt;元素 = 开始标签+内容+结束标签&lt;/li&gt;
&lt;li&gt;注意区分&lt;strong&gt;块元素&lt;/strong&gt;和&lt;strong&gt;内联元素&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;大多数的空白符（制表符、回车、空格）都会被浏览器忽略，但是利用空白符可以让你的html更具可读性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;遇到的问题&quot;&gt;&lt;a href=&quot;#遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题&quot;&gt;&lt;/a&gt;遇到的问题&lt;/h3&gt;&lt;p&gt;但是对第一章的一点CSS样式产生了疑问，如下&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;hexcolor&quot;&gt;#d2b48c&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;margin-left&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;20%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;margin-right&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;20%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt; solid black&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在没有其他样式的情况下，上面的代码表现在浏览器中的结果就是：body设置了背景，并且左右都设置了外边距，有一个10px的黑色边框，如图：&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Archmee/lkd2d97zvb5fvz89feyhwr98v/master/gitblog/images/00-47-54.jpg&quot; alt=&quot;body background-color&quot;&gt;&lt;/p&gt;
&lt;p&gt;首先我们忽略body默认的外边距问题，看起来一切都很正常是不是，但是我的问题来了，按照我们设置div或其他元素的经验，body很明显就是黑色边框范围内的区域，而且body左右两边都应该有外边距撑开的白色区域，或者说在body区域外的都应该是默认的白色才对，但是这里没有，而且对body设置的背景色覆盖了整个区域，那么问题在哪？&lt;/p&gt;
&lt;p&gt;通过google找到了一篇文章对这问题做了很详细的解释： &lt;a href=&quot;http://www.zhangxinxu.com/wordpress/2009/09/%E5%AF%B9html%E4%B8%8Ebody%E7%9A%84%E4%B8%80%E4%BA%9B%E7%A0%94%E7%A9%B6%E4%B8%8E%E7%90%86%E8%A7%A3/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;对html与body的一些研究与理解&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里不是body的background起作用，而是body作为一个根结点起作用了，html标签未被激活，此时body担当了类似于根结点的结点，其background背景色被浏览器俘获，浏览器界面背景色为background的背景色，以上是我的推论，这种推论不是我凭空想象出来的，而是有一定的根据的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作者自己也说了是一种推论而已，更详细的解释请看原文，我不搬运了。&lt;br&gt;作者在文中第一段提到的那篇文章 &lt;a href=&quot;http://www.blueidea.com/tech/site/2006/3130.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;正确认识html与body&lt;/a&gt; 中也有一个解释：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;标准与非标准模式&lt;/strong&gt;&lt;br&gt;standard模式后，定义和解析将更加严格，所有定义必须从顶级标签html开始。&lt;br&gt;可以理解为传统非standard模式定义body的用法，standard模式下都必须在html上定义。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而要解决这个看起来有点诡异的问题是对html设置样式&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/*设置整个文档的背景为白色*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;hexcolor&quot;&gt;#fff&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果截图：&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Archmee/lkd2d97zvb5fvz89feyhwr98v/master/gitblog/images/01-32-18.jpg&quot; alt=&quot;html background color&quot;&gt;&lt;br&gt;虽然不知道这样做的好处和弊端是什么，但至少达到了我期望看到的效果。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今天是7月6号，前端之旅的第一天。&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;从年前被辞退以来，先是花了四个月学习iOS开发，但是这其中由于个人感情原因一直不能集中精力
    
    </summary>
    
      <category term="tech" scheme="http://archmee.github.io/categories/tech/"/>
    
    
      <category term="Front End" scheme="http://archmee.github.io/tags/Front-End/"/>
    
  </entry>
  
  <entry>
    <title>温故PHP之Cookie和Session</title>
    <link href="http://archmee.github.io/201607/2016-07-05.html"/>
    <id>http://archmee.github.io/201607/2016-07-05.html</id>
    <published>2016-07-05T08:48:00.000Z</published>
    <updated>2016-07-11T20:02:15.702Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;学习iOS以来，已经有一段时间不碰PHP了，这两天翻《Head First PHP &amp;amp; MySQL》温习PHP的时候(第7章)，发现自己之前对Cookie和Session并没有理解透彻，所以看完后决定写点学习笔记。&lt;/p&gt;
&lt;h2 id=&quot;Cookie&quot;&gt;&lt;a href=&quot;#Cookie&quot; class=&quot;headerlink&quot; title=&quot;Cookie&quot;&gt;&lt;/a&gt;Cookie&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;cookie是浏览器存储在用户计算机中的一小段数据。cookie和PHP变量十分相似，只不过关闭浏览器或计算机后cookie还存在，更重要的是cookie可以删除。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可以从PHP或其他语言访问cookie，而且cookie不仅可以跨多个页面(脚本)持久保存，甚至可以跨多个浏览器会话持久存储。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;cookie由键-值对组成，每个键-值可以有一个失效日期，如果没有指定失效日期，则cookie会在浏览器关闭时销毁。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设置cookie，获取cookie以及销毁cookie&lt;/p&gt;
  &lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置cookie&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setcookie(&lt;span class=&quot;string&quot;&gt;&#39;userid&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2345&#39;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;//没有设置失效时间，则会在浏览器关闭后立即销毁&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setcookie(&lt;span class=&quot;string&quot;&gt;&#39;userid&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;1234&#39;&lt;/span&gt;, time()+&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//设置当前时间以后60秒失效&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//通过超全局变量获取cookie&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;(&lt;span class=&quot;variable&quot;&gt;$_COOKIE&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&#39;userid&#39;&lt;/span&gt;]))&amp;#123;&amp;#125;&lt;span class=&quot;comment&quot;&gt;//判断是否设置了该cookie&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//销毁cookie只需要设置它的到期日期在过去的任意时间即可&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setcookie(&lt;span class=&quot;string&quot;&gt;&#39;userid&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, time()-&lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//设置userid这个cookie的到期日期在一个小时以前或其他过去时间，浏览器就会销毁该cookie&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Session&quot;&gt;&lt;a href=&quot;#Session&quot; class=&quot;headerlink&quot; title=&quot;Session&quot;&gt;&lt;/a&gt;Session&lt;/h2&gt;&lt;p&gt;如果用户设置浏览器禁用cookie，这样对cookie的存取操作就会失败，所以我们不能完全依赖cookie，此时可以考虑使用session。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;和cookie不同的是，session存储在服务器端，这样就不会受到浏览器限制。&lt;/li&gt;
&lt;li&gt;由于session数据保存在服务器上，这比存储在cookie中更安全，也更可靠。&lt;/li&gt;
&lt;li&gt;session比cookie能存储更多类型和大小的数据。&lt;/li&gt;
&lt;li&gt;session（会话）的缺点就是，无法对一个session变量在数据存储时间上做太多控制，会话一结束就会自动销毁会话变量，而会话在关闭浏览器时就结束。&lt;/li&gt;
&lt;li&gt;session变量由键-值对组成，但是和cookie不同的时，session变量没有失效日期，以为它随着浏览器关闭就销毁。&lt;/li&gt;
&lt;li&gt;所有要使用session数据的页面都要调用&lt;code&gt;session_start()&lt;/code&gt;开始一个会话，如果会话不存在，就建立一个会话，并分配一个会话ID，如果已经存在一个会话，则使用已有会话。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在会话开始后，可以直接操作$_SESSION全局变量存取会话变量&lt;/p&gt;
  &lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;session_start(); &lt;span class=&quot;comment&quot;&gt;//开始一个会话&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&#39;username&#39;&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&#39;haha&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&#39;username&#39;&lt;/span&gt;]))&amp;#123;&amp;#125;&lt;span class=&quot;comment&quot;&gt;//判断该会话变量是否存在&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;session_destroy()&lt;/code&gt;结束一个会话，但它不会自动销毁任何会话变量。所以如果希望用户关闭浏览器之前清空会话变量，就必须手动删除。&lt;/p&gt;
  &lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$_SESSION&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;();&lt;span class=&quot;comment&quot;&gt;//快速有效的清空会话变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  但还没有完全结束，因为session在后台实际上会使用cookie，如果浏览器支持cookie，会话可能会设置一个cookie临时存储会话ID，所以要完全关闭一个会话，还必须删除可能在浏览器上自动创建来存储会话ID的cookie&lt;/p&gt;
  &lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//会话ID存储在以会话命名的一个cookie中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;variable&quot;&gt;$_COOKIE&lt;/span&gt;[session_name()])) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setcookie(session_name, &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, time()-&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;完整的操作一个会话的过程如下&lt;/p&gt;
  &lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//开始一个会话&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;session_start();&lt;span class=&quot;comment&quot;&gt;//开始会话后，所有脚本共享会话变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//存取会话变量、检查会话变量...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&#39;username&#39;&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&#39;haha&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//结束会话的正确姿势&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$_SESSION&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;();&lt;span class=&quot;comment&quot;&gt;//清空会话变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;variable&quot;&gt;$_COOKIE&lt;/span&gt;[session_name()])) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setcookie(session_name, &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, time()-&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;session_destroy(); &lt;span class=&quot;comment&quot;&gt;//最后再结束会话&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但是问题依然存在的是，如果用户禁用了cookie，那么session会随着浏览器的关闭而结束。而会话如何响应cookie被禁用取决于服务器上php.ini配置文件中的相关配置项。&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;session.use_cookies&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;session.use_only_cookies&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;session.use_trans_sid&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Watch!&lt;/strong&gt;&lt;br&gt;禁用cookie的情况下要让会话正常工作，还需要另外一个机制在不同页面传递会话ID，这个机制需要将会话ID追加到每个页面的URL后面，如果服务器上的php.ini中文件中&lt;code&gt;session.use_trans_id&lt;/code&gt;被设置为1(true)，这就会自动发生。如果你无法直接修改php.ini文件，cookie被禁用时就必须利用类似下面的代码手动地向会话页面的URL追加会话ID。&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;a href=&lt;span class=&quot;string&quot;&gt;&quot;index.php?&amp;lt;?php echo SID; ?&amp;gt;&quot;&lt;/span&gt;&amp;gt;view index&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;但是现在仍不能扭转关闭浏览器即结束会话的命运，而这对于需要记住用户登陆状态的应用至关重要。&lt;/p&gt;
&lt;h2 id=&quot;Cookie-Session-更持久的方案&quot;&gt;&lt;a href=&quot;#Cookie-Session-更持久的方案&quot; class=&quot;headerlink&quot; title=&quot;Cookie+Session=更持久的方案&quot;&gt;&lt;/a&gt;Cookie+Session=更持久的方案&lt;/h2&gt;&lt;p&gt;我们发现不管是session还是cookie都有各自的优缺点，那么是否可以尝试一下Cookie+Session的方案。&lt;/p&gt;
&lt;p&gt;这种方案在技术上并没有增加多少复杂度，只需要同时设置Cookie和Session并且同时销毁即可。&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;session_start();&lt;span class=&quot;comment&quot;&gt;//开始会话&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&#39;userid&#39;&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&#39;12345&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setcookie(&lt;span class=&quot;string&quot;&gt;&#39;userid&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;12345&#39;&lt;/span&gt;, time()+&lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//一个小时候失效&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//然后在其他脚本中共享cookie和session数据了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//手动注销数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&#39;userid&#39;&lt;/span&gt;])) &amp;#123;&lt;span class=&quot;comment&quot;&gt;//先销毁session数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;$_SESSION&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;variable&quot;&gt;$_COOKIE&lt;/span&gt;[session_name()])) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setcookie(&lt;span class=&quot;variable&quot;&gt;$_COOKIE&lt;/span&gt;[session_name],&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;,time()-&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    session_destroy();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setcookie(&lt;span class=&quot;string&quot;&gt;&#39;userid&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, time()-&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//再销毁cookie&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;但是cookie+session仍然不能防止用户禁用cookie，所以我们还需要寻求更好的方案。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;学习iOS以来，已经有一段时间不碰PHP了，这两天翻《Head First PHP &amp;amp; MySQL》温习PHP的时候(第7章)，发现
    
    </summary>
    
      <category term="tech" scheme="http://archmee.github.io/categories/tech/"/>
    
    
      <category term="Back End" scheme="http://archmee.github.io/tags/Back-End/"/>
    
      <category term="PHP" scheme="http://archmee.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发中的一些代码片段</title>
    <link href="http://archmee.github.io/201606/some-ios-code-snippet.html"/>
    <id>http://archmee.github.io/201606/some-ios-code-snippet.html</id>
    <published>2016-06-29T05:02:00.000Z</published>
    <updated>2016-06-29T10:41:58.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;获取保存文档的路径&quot;&gt;&lt;a href=&quot;#获取保存文档的路径&quot; class=&quot;headerlink&quot; title=&quot;获取保存文档的路径&quot;&gt;&lt;/a&gt;获取保存文档的路径&lt;/h2&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSSearchPathForDirectoriesInDomains&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSDocumentDirectory&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NSUserDomainMask&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;简单的音乐播放&quot;&gt;&lt;a href=&quot;#简单的音乐播放&quot; class=&quot;headerlink&quot; title=&quot;简单的音乐播放&quot;&gt;&lt;/a&gt;简单的音乐播放&lt;/h2&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//本地音乐文件test.mp3，如果是URL资源，可以直接用NSURL初始化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *musicPath = [[&lt;span class=&quot;built_in&quot;&gt;NSBundle&lt;/span&gt; mainBundle] pathForResource:&lt;span class=&quot;string&quot;&gt;@&quot;test&quot;&lt;/span&gt; ofType:&lt;span class=&quot;string&quot;&gt;@&quot;mp3&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSURL&lt;/span&gt; *url = [&lt;span class=&quot;built_in&quot;&gt;NSURL&lt;/span&gt; fileURLWithPath:musicPath];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVAudioPlayer&lt;/span&gt; *audioPlayer = [[&lt;span class=&quot;built_in&quot;&gt;AVAudioPlayer&lt;/span&gt; alloc] initWithContentsOfURL:url error:&amp;amp;error];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;audioPlayer&lt;span class=&quot;variable&quot;&gt;.numberOfLoops&lt;/span&gt; = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//循化播放&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (audioPlayer == &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;) &amp;#123; &lt;span class=&quot;comment&quot;&gt;//播放器加载出错，或者没有找到播放文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;the error is %@&quot;&lt;/span&gt;, [error localizedDescription]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [audioPlayer play]; &lt;span class=&quot;comment&quot;&gt;//播放音乐&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;简单的视频播放&quot;&gt;&lt;a href=&quot;#简单的视频播放&quot; class=&quot;headerlink&quot; title=&quot;简单的视频播放&quot;&gt;&lt;/a&gt;简单的视频播放&lt;/h2&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVPlayerItem&lt;/span&gt; *playerItem = [&lt;span class=&quot;built_in&quot;&gt;AVPlayerItem&lt;/span&gt; playerItemWithURL:url]; &lt;span class=&quot;comment&quot;&gt;//指定视频链接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVPlayer&lt;/span&gt; *player = [&lt;span class=&quot;built_in&quot;&gt;AVPlayer&lt;/span&gt; playerWithPlayerItem:playerItem];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;AVPlayerLayer&lt;/span&gt; *layer = [&lt;span class=&quot;built_in&quot;&gt;AVPlayerLayer&lt;/span&gt; playerLayerWithPlayer: player]; &lt;span class=&quot;comment&quot;&gt;//播放视频的画布&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;layer&lt;span class=&quot;variable&quot;&gt;.frame&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.view&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.bounds&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;layer&lt;span class=&quot;variable&quot;&gt;.backgroundColor&lt;/span&gt; = [[&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; blackColor] &lt;span class=&quot;built_in&quot;&gt;CGColor&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.view&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.layer&lt;/span&gt; addSublayer:layer];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[player play];&lt;span class=&quot;comment&quot;&gt;//开始播放，pause结束播放&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;弹出Alert框&quot;&gt;&lt;a href=&quot;#弹出Alert框&quot; class=&quot;headerlink&quot; title=&quot;弹出Alert框&quot;&gt;&lt;/a&gt;弹出Alert框&lt;/h2&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *title = &lt;span class=&quot;string&quot;&gt;@&quot;我是title&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *message = &lt;span class=&quot;string&quot;&gt;@&quot;测试Alert！！！&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;UIAlertController&lt;/span&gt; *alert = [&lt;span class=&quot;built_in&quot;&gt;UIAlertController&lt;/span&gt; alertControllerWithTitle:title&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                               message:message&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                            preferredStyle:&lt;span class=&quot;built_in&quot;&gt;UIAlertControllerStyleAlert&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//实现点击按钮后的block&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (^actionHandler)(&lt;span class=&quot;built_in&quot;&gt;UIAlertAction&lt;/span&gt; *) = ^(&lt;span class=&quot;built_in&quot;&gt;UIAlertAction&lt;/span&gt; * action)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//执行该block需要的操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//声明alert的默认行为&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;UIAlertAction&lt;/span&gt; *defaultAction = [&lt;span class=&quot;built_in&quot;&gt;UIAlertAction&lt;/span&gt; actionWithTitle:&lt;span class=&quot;string&quot;&gt;@&quot;朕已知晓&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                        style:&lt;span class=&quot;built_in&quot;&gt;UIAlertActionStyleDefault&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      handler:actionHandler];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//为alert添加事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//[alert addAction:cancelAction];//取消操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[alert addAction:defaultAction];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//此处真正弹出alert框&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; presentViewController:alert animated:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt; completion:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;为点击按钮设置过渡效果&quot;&gt;&lt;a href=&quot;#为点击按钮设置过渡效果&quot; class=&quot;headerlink&quot; title=&quot;为点击按钮设置过渡效果&quot;&gt;&lt;/a&gt;为点击按钮设置过渡效果&lt;/h2&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//设置添加过渡效果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;CATransition&lt;/span&gt; *transition = [&lt;span class=&quot;built_in&quot;&gt;CATransition&lt;/span&gt; animation];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;transition&lt;span class=&quot;variable&quot;&gt;.type&lt;/span&gt; = k&lt;span class=&quot;built_in&quot;&gt;CATransitionFade&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;transition&lt;span class=&quot;variable&quot;&gt;.duration&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//时长&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;transition&lt;span class=&quot;variable&quot;&gt;.timingFunction&lt;/span&gt; = [&lt;span class=&quot;built_in&quot;&gt;CAMediaTimingFunction&lt;/span&gt; functionWithName:k&lt;span class=&quot;built_in&quot;&gt;CAMediaTimingFunctionEaseOut&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//展示过渡效果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.view&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.layer&lt;/span&gt; addAnimation:transition forKey:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;用UIWebView展示本地html文件内容&quot;&gt;&lt;a href=&quot;#用UIWebView展示本地html文件内容&quot; class=&quot;headerlink&quot; title=&quot;用UIWebView展示本地html文件内容&quot;&gt;&lt;/a&gt;用UIWebView展示本地html文件内容&lt;/h2&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *htmlfile = [[&lt;span class=&quot;built_in&quot;&gt;NSBundle&lt;/span&gt; mainBundle] pathForResource:&lt;span class=&quot;string&quot;&gt;@&quot;CrazyDrag&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                     ofType:&lt;span class=&quot;string&quot;&gt;@&quot;html&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSData&lt;/span&gt; *htmlData = [&lt;span class=&quot;built_in&quot;&gt;NSData&lt;/span&gt; dataWithContentsOfFile:htmlfile];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSURL&lt;/span&gt; *baseURL = [&lt;span class=&quot;built_in&quot;&gt;NSURL&lt;/span&gt; fileURLWithPath: [[&lt;span class=&quot;built_in&quot;&gt;NSBundle&lt;/span&gt; mainBundle] bundlePath] ];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//UIWebView *aboutWebView    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.aboutWebView&lt;/span&gt; loadData:htmlData&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   MIMEType:&lt;span class=&quot;string&quot;&gt;@&quot;text/html&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           textEncodingName:&lt;span class=&quot;string&quot;&gt;@&quot;UTF-8&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    baseURL:baseURL];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;使用delegate&quot;&gt;&lt;a href=&quot;#使用delegate&quot; class=&quot;headerlink&quot; title=&quot;使用delegate&quot;&gt;&lt;/a&gt;使用delegate&lt;/h2&gt;&lt;p&gt;delegate一般适用于：A界面是B界面的父界面，而A想和B通信，就可以在B中声明@protocol，然后设置A为B的delegate，A就可以通过接口获取B的情况，而A对B是不可知的。&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//1.在B.h中声明&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@protocol&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BDelegate&lt;/span&gt; &amp;lt;&lt;span class=&quot;title&quot;&gt;NSObject&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)someActionWillCallByA:(A *)controller;&lt;span class=&quot;comment&quot;&gt;//声明想在A中调用的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//公共接口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;B&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;SomeController&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; &amp;lt;BDelegate&amp;gt; delegate; &lt;span class=&quot;comment&quot;&gt;//声明代理指针变量，和代理有关的就向该代理发送消息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//其他外部可用的声明&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//2.在B.m中调用在头文件中声明的代理方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.delegate&lt;/span&gt; someActionWillCallByA]; &lt;span class=&quot;comment&quot;&gt;//其实此处的方法还是空，并未实现&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//3.在A.h中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#import &lt;span class=&quot;title&quot;&gt;&quot;B.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//说明在A中要使用的B代理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;A&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;SomeController&lt;/span&gt; &amp;lt;&lt;span class=&quot;title&quot;&gt;BDelegate&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//4.在A.m中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//实现要代理的方法 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)someActionWillCallByA:(A *)controller &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//希望在A中执行的操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;使用-Local-NSNotification&quot;&gt;&lt;a href=&quot;#使用-Local-NSNotification&quot; class=&quot;headerlink&quot; title=&quot;使用 Local NSNotification&quot;&gt;&lt;/a&gt;使用 Local NSNotification&lt;/h2&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//现在创建通知分为两步：设置notification type 和 调度通知&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//1. notification setting type (ios 8 later)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;UIUserNotificationType&lt;/span&gt; types = (&lt;span class=&quot;built_in&quot;&gt;UIUserNotificationType&lt;/span&gt;)(&lt;span class=&quot;built_in&quot;&gt;UIUserNotificationTypeAlert&lt;/span&gt; | &lt;span class=&quot;built_in&quot;&gt;UIUserNotificationTypeSound&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;UIUserNotificationSettings&lt;/span&gt; *mySettings = [&lt;span class=&quot;built_in&quot;&gt;UIUserNotificationSettings&lt;/span&gt; settingsForTypes:types categories:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; sharedApplication] registerUserNotificationSettings:mySettings]; &lt;span class=&quot;comment&quot;&gt;//注册通知&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//2. creating and schedule local notification&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDate&lt;/span&gt; *date = [&lt;span class=&quot;built_in&quot;&gt;NSDate&lt;/span&gt; dateWithTimeIntervalSinceNow:&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;UILocalNotification&lt;/span&gt; *notification = [[&lt;span class=&quot;built_in&quot;&gt;UILocalNotification&lt;/span&gt; alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;notification&lt;span class=&quot;variable&quot;&gt;.fireDate&lt;/span&gt; = date;&lt;span class=&quot;comment&quot;&gt;//失效日期&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;notification&lt;span class=&quot;variable&quot;&gt;.alertBody&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;@&quot;Whatever&quot;&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//通知消息内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;notification&lt;span class=&quot;variable&quot;&gt;.timeZone&lt;/span&gt; = [&lt;span class=&quot;built_in&quot;&gt;NSTimeZone&lt;/span&gt; defaultTimeZone];&lt;span class=&quot;comment&quot;&gt;//设置时区&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;notification&lt;span class=&quot;variable&quot;&gt;.soundName&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;UILocalNotificationDefaultSoundName&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//提醒的声音&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;notification&lt;span class=&quot;variable&quot;&gt;.userInfo&lt;/span&gt; = @&amp;#123;&lt;span class=&quot;string&quot;&gt;@&quot;IDINFO&quot;&lt;/span&gt;: @(notificationID)&amp;#125;; &lt;span class=&quot;comment&quot;&gt;//可以设置该notification的标示符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; sharedApplication] scheduleLocalNotification:notification];&lt;span class=&quot;comment&quot;&gt;//调度通知&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//其他有用的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//[[UIApplication sharedApplication] scheduledLocalNotifications];//获取已经加入通知列表的所有通知数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//[[UIApplication sharedApplication] cancelLocalNotification:notification]; //取消通知&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;保存数据的几种方法&quot;&gt;&lt;a href=&quot;#保存数据的几种方法&quot; class=&quot;headerlink&quot; title=&quot;保存数据的几种方法&quot;&gt;&lt;/a&gt;保存数据的几种方法&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;plist文件&lt;/p&gt;
 &lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[List writeToFile:&lt;span class=&quot;string&quot;&gt;@&quot;file.plist&quot;&lt;/span&gt; atomically:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;];&lt;span class=&quot;comment&quot;&gt;//直接写入到plist文件中即可&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 加载数据一般有类似 initWithContentsOfFile 的方法可用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NSUserDefaults 保存用户设置等数据，key－value的形式&lt;/p&gt;
 &lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//根据不同的参数类型使用对应的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;built_in&quot;&gt;NSUserDefaults&lt;/span&gt; standardUserDefaults] setBool:&lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt; forKey:&lt;span class=&quot;string&quot;&gt;@&quot;FirstTime&quot;&lt;/span&gt;];&lt;span class=&quot;comment&quot;&gt;//保存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; firstTime = [[&lt;span class=&quot;built_in&quot;&gt;NSUserDefaults&lt;/span&gt; standardUserDefaults] boolForKey:&lt;span class=&quot;string&quot;&gt;@&quot;FirstTime&quot;&lt;/span&gt;];&lt;span class=&quot;comment&quot;&gt;//加载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//还可以用字典对象同时保存所有值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *dictionary = @&amp;#123;&lt;span class=&quot;string&quot;&gt;@&quot;ChecklistIndex&quot;&lt;/span&gt;:@-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             &lt;span class=&quot;string&quot;&gt;@&quot;FirstTime&quot;&lt;/span&gt;:@YES,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             &lt;span class=&quot;string&quot;&gt;@&quot;ChecklistItemId&quot;&lt;/span&gt;:@&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;built_in&quot;&gt;NSUserDefaults&lt;/span&gt; standardUserDefaults] registerDefaults:dictionary];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NSData、NSCoder 配合 NSKeyedUnarchiver 保存数据&lt;/p&gt;
 &lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//在要保存的对象类型的实现文件中，要处理对象进行编码解码的工作，比如下面&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//解码，用语初始化对象被自动调用初始化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (instancetype)initWithCoder:(&lt;span class=&quot;built_in&quot;&gt;NSCoder&lt;/span&gt; *)coder &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; = [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.name&lt;/span&gt; = [coder decodeObjectForKey:&lt;span class=&quot;string&quot;&gt;@&quot;Name&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.iconName&lt;/span&gt; = [coder decodeObjectForKey:&lt;span class=&quot;string&quot;&gt;@&quot;iconName&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.items&lt;/span&gt; = [coder decodeObjectForKey:&lt;span class=&quot;string&quot;&gt;@&quot;Items&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//编码，用于保存数据时自动被调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)encodeWithCoder:(&lt;span class=&quot;built_in&quot;&gt;NSCoder&lt;/span&gt; *)coder &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [coder encodeObject:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.name&lt;/span&gt; forKey:&lt;span class=&quot;string&quot;&gt;@&quot;Name&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [coder encodeObject:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.iconName&lt;/span&gt; forKey:&lt;span class=&quot;string&quot;&gt;@&quot;iconName&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [coder encodeObject:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.items&lt;/span&gt; forKey:&lt;span class=&quot;string&quot;&gt;@&quot;Items&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//在其他代码中使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//保存数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSMutableData&lt;/span&gt; *data = [[&lt;span class=&quot;built_in&quot;&gt;NSMutableData&lt;/span&gt; alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSKeyedArchiver&lt;/span&gt; *archiver = [[&lt;span class=&quot;built_in&quot;&gt;NSKeyedArchiver&lt;/span&gt; alloc] initForWritingWithMutableData:data]; &lt;span class=&quot;comment&quot;&gt;//用NSData初始化，表示archiver的数据都保存到NSData中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[archiver encodeObject:objValue forKey:&lt;span class=&quot;string&quot;&gt;@&quot;key&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[archiver finishEncoding]; &lt;span class=&quot;comment&quot;&gt;//NSKeyedArchiver有个编码解码的过程，此处调用完成编码的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[data writeToFile:filePath atomically:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;]; &lt;span class=&quot;comment&quot;&gt;//将编码后的数据保存到文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//加载数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSData&lt;/span&gt; *data = [[&lt;span class=&quot;built_in&quot;&gt;NSData&lt;/span&gt; alloc] initWithContentsOfFile:filePath]; &lt;span class=&quot;comment&quot;&gt;//将文件读入NSData&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSKeyedUnarchiver&lt;/span&gt; *unarchiver = [[&lt;span class=&quot;built_in&quot;&gt;NSKeyedUnarchiver&lt;/span&gt; alloc] initForReadingWithData:data];&lt;span class=&quot;comment&quot;&gt;//用data来初始化unarchiver&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obj = [unarchiver decodeObjectForKey:&lt;span class=&quot;string&quot;&gt;@&quot;key&quot;&lt;/span&gt;];&lt;span class=&quot;comment&quot;&gt;//将解码后的数据保存到对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[unarchiver finishDecoding]; &lt;span class=&quot;comment&quot;&gt;//调用完成解码方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CoreData(暂时没用过)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;数据库比如 SQLite、Realm（暂时没用过）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;局部更新表视图&quot;&gt;&lt;a href=&quot;#局部更新表视图&quot; class=&quot;headerlink&quot; title=&quot;局部更新表视图&quot;&gt;&lt;/a&gt;局部更新表视图&lt;/h2&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.tableView&lt;/span&gt; beginUpdates];    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.tableView&lt;/span&gt; reloadRowsAtIndexPaths:@[[&lt;span class=&quot;built_in&quot;&gt;NSIndexPath&lt;/span&gt; indexPathForRow:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; inSection:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]] withRowAnimation:&lt;span class=&quot;built_in&quot;&gt;UITableViewRowAnimationNone&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.tableView&lt;/span&gt; deleteRowsAtIndexPaths:@[[&lt;span class=&quot;built_in&quot;&gt;NSIndexPath&lt;/span&gt; indexPathForRow:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; inSection:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]] withRowAnimation:&lt;span class=&quot;built_in&quot;&gt;UITableViewRowAnimationFade&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.tableView&lt;/span&gt; endUpdates];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;通知中心的一种用法&quot;&gt;&lt;a href=&quot;#通知中心的一种用法&quot; class=&quot;headerlink&quot; title=&quot;通知中心的一种用法&quot;&gt;&lt;/a&gt;通知中心的一种用法&lt;/h2&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//我使用通知是在在网络上异步加载JSON数据，获取到数据后要通知TableView去reload data的情景&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//发出通知&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;built_in&quot;&gt;NSNotificationCenter&lt;/span&gt; defaultCenter] postNotificationName:&lt;span class=&quot;string&quot;&gt;@&quot;reloadTable&quot;&lt;/span&gt; object:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//谁要接收通知&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//给通知中心添加观察者，得到通知后便执行指定的函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;built_in&quot;&gt;NSNotificationCenter&lt;/span&gt; defaultCenter] addObserver:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; selector:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(notiReloadData) name:&lt;span class=&quot;string&quot;&gt;@&quot;reloadTable&quot;&lt;/span&gt; object: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//不需要通知后活着对象要dealloc时要移除observer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;built_in&quot;&gt;NSNotificationCenter&lt;/span&gt; defaultCenter] removeObserver:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; name:&lt;span class=&quot;string&quot;&gt;@&quot;reloadTable&quot;&lt;/span&gt; object:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;改变导航栏的返回按钮文字&quot;&gt;&lt;a href=&quot;#改变导航栏的返回按钮文字&quot; class=&quot;headerlink&quot; title=&quot;改变导航栏的返回按钮文字&quot;&gt;&lt;/a&gt;改变导航栏的返回按钮文字&lt;/h2&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.navigationItem&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.backBarButtonItem&lt;/span&gt; = [[&lt;span class=&quot;built_in&quot;&gt;UIBarButtonItem&lt;/span&gt; alloc] initWithTitle:&lt;span class=&quot;string&quot;&gt;@&quot;返回&quot;&lt;/span&gt; style:&lt;span class=&quot;built_in&quot;&gt;UIBarButtonItemStyleDone&lt;/span&gt; target:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; action:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;将UIVeiw改变成UIScrollView&quot;&gt;&lt;a href=&quot;#将UIVeiw改变成UIScrollView&quot; class=&quot;headerlink&quot; title=&quot;将UIVeiw改变成UIScrollView&quot;&gt;&lt;/a&gt;将UIVeiw改变成UIScrollView&lt;/h2&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//我使用的方式是在storybard中直接将UIView改变成UIScrollViw，但它仍然不能滚动，后来通过如下代码设置了滚动区的宽度和高度就可以了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[(&lt;span class=&quot;built_in&quot;&gt;UIScrollView&lt;/span&gt; *)&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.view&lt;/span&gt; setContentSize:&lt;span class=&quot;built_in&quot;&gt;CGSizeMake&lt;/span&gt;(width, height);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;NSString的几个有用的方法&quot;&gt;&lt;a href=&quot;#NSString的几个有用的方法&quot; class=&quot;headerlink&quot; title=&quot;NSString的几个有用的方法&quot;&gt;&lt;/a&gt;NSString的几个有用的方法&lt;/h2&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//替换字符串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[stringTest stringByReplacingOccurrencesOfString:&lt;span class=&quot;string&quot;&gt;@&quot;－&quot;&lt;/span&gt; withString:&lt;span class=&quot;string&quot;&gt;@&quot; &quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//按照指定字符串分割一个字符串，返回数组的形式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[string componentsSeparatedByString:&lt;span class=&quot;string&quot;&gt;@&quot;&amp;lt;br /&amp;gt;&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//使用指定分隔符将数据连接成一个字符串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[array componentsJoinedByString:&lt;span class=&quot;string&quot;&gt;@&quot;\n&quot;&lt;/span&gt;];&lt;span class=&quot;comment&quot;&gt;//用换行符来连接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//删除换行符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[string stringByTrimmingCharactersInSet:[&lt;span class=&quot;built_in&quot;&gt;NSCharacterSet&lt;/span&gt; newlineCharacterSet]];&lt;span class=&quot;comment&quot;&gt;//还有其他替换空白的选项&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;使用正则表达式&quot;&gt;&lt;a href=&quot;#使用正则表达式&quot; class=&quot;headerlink&quot; title=&quot;使用正则表达式&quot;&gt;&lt;/a&gt;使用正则表达式&lt;/h2&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//建立正则表达式规则&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSRegularExpression&lt;/span&gt; *regex = [&lt;span class=&quot;built_in&quot;&gt;NSRegularExpression&lt;/span&gt; regularExpressionWithPattern:&lt;span class=&quot;string&quot;&gt;@&quot;(&amp;lt;.+?&amp;gt;)|\r|\n&quot;&lt;/span&gt;                                                                           options:&lt;span class=&quot;built_in&quot;&gt;NSRegularExpressionCaseInsensitive&lt;/span&gt; error:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; ];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//应用正则表达式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *strRes = [regex stringByReplacingMatchesInString:str                                                           options:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;                                                             range:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, [str length])                                                      withTemplate:&lt;span class=&quot;string&quot;&gt;@&quot;&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;UILabel自适应&quot;&gt;&lt;a href=&quot;#UILabel自适应&quot; class=&quot;headerlink&quot; title=&quot;UILabel自适应&quot;&gt;&lt;/a&gt;UILabel自适应&lt;/h2&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//指定换行方式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;label&lt;span class=&quot;variable&quot;&gt;.lineBreakMode&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;NSLineBreakByClipping&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//文字对齐方式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;label&lt;span class=&quot;variable&quot;&gt;.textAlignment&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;NSTextAlignmentRight&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//指定该项是为了当文字内容超出label宽度时自动换行成多行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;label&lt;span class=&quot;variable&quot;&gt;.numberOfLines&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置这个是为了当文字内容超出label高度时可以自动扩展label，显示剩余文字，而不会截断&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[label sizeToFit];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//调整字体大小来适应label的宽度，但是该方法好像和sizeToFit有冲突，同时设置没有效果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[label adjustsFontSizeToFitWidth];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;一个单例&quot;&gt;&lt;a href=&quot;#一个单例&quot; class=&quot;headerlink&quot; title=&quot;一个单例&quot;&gt;&lt;/a&gt;一个单例&lt;/h2&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+ (instancetype)shareModel &amp;#123; &lt;span class=&quot;comment&quot;&gt;//单例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 1 声明一个静态变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; DataMode *_shareModel = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 2 声明一个静态这是 dispatch_one_t，确保这些初始化代码只能被执行一次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;dispatch_once_t&lt;/span&gt; oncePredicate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 3 使用 GCD 执行一个 block 来初始化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;dispatch_once&lt;/span&gt;(&amp;amp;oncePredicate, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _shareModel = [[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; _shareModel;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;注意⚠&quot;&gt;&lt;a href=&quot;#注意⚠&quot; class=&quot;headerlink&quot; title=&quot;注意⚠&quot;&gt;&lt;/a&gt;注意⚠&lt;/h2&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//当我们创建RGB颜色时，由于OC只支持0-1的数值，所以我们要将原来RGB值/255&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; colorWithRed:&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt; green:&lt;span class=&quot;number&quot;&gt;144&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt; blue:&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt; alpha:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//当json数据有值为null的时候，不能直接保存到文件，必须将其替换或移除&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;value = null;&lt;span class=&quot;comment&quot;&gt;//此处仅仅为伪代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[value isEqual:[&lt;span class=&quot;built_in&quot;&gt;NSNull&lt;/span&gt; null];&lt;span class=&quot;comment&quot;&gt;//活着用[value isKindOfClass:[NSNull class]]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//当json数据有值为false的时候，不能直接进行逻辑判断&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;value = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[value isEqualToNumber:@&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;span class=&quot;comment&quot;&gt;//比如这样判断是否为false，0 = FALSE = NO&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;获取保存文档的路径&quot;&gt;&lt;a href=&quot;#获取保存文档的路径&quot; class=&quot;headerlink&quot; title=&quot;获取保存文档的路径&quot;&gt;&lt;/a&gt;获取保存文档的路径&lt;/h2&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
    
    </summary>
    
      <category term="tech" scheme="http://archmee.github.io/categories/tech/"/>
    
    
      <category term="Objective-C" scheme="http://archmee.github.io/tags/Objective-C/"/>
    
      <category term="iOS" scheme="http://archmee.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>开始使用 CocoaPods</title>
    <link href="http://archmee.github.io/201605/start-use-cocoapods.html"/>
    <id>http://archmee.github.io/201605/start-use-cocoapods.html</id>
    <published>2016-05-30T07:45:00.000Z</published>
    <updated>2016-06-29T05:08:22.000Z</updated>
    
    <content type="html">&lt;p&gt;简单记录一下最近在项目中使用 CocoaPods 遇到的问题和解决办法&lt;/p&gt;
&lt;h2 id=&quot;What’s-it&quot;&gt;&lt;a href=&quot;#What’s-it&quot; class=&quot;headerlink&quot; title=&quot;What’s it&quot;&gt;&lt;/a&gt;What’s it&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;CocoaPods is a dependency manager for Swift and Objective-C Cocoa projects.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;简单翻译就是一个用于 Swift 和 OC 的 Cocoa 项目的依赖管理器。&lt;/p&gt;
&lt;h2 id=&quot;下载和安装&quot;&gt;&lt;a href=&quot;#下载和安装&quot; class=&quot;headerlink&quot; title=&quot;下载和安装&quot;&gt;&lt;/a&gt;下载和安装&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://cocoapods.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CocoaPods官网&lt;/a&gt; 指明了此软件是基于 Ruby 开发环境的，但是这里默认你已经安装好了 Ruby 环境（OS X系统已经默认安装了）。接下来用一条指令即可安装CocoaPods&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ gem install cocoapods&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;但是等你安装报错才发现，我们身处大局域网之内，很难连上 Internet。&lt;br&gt;针对这个问题，国内已经有网站提供了镜像，比如&lt;a href=&quot;https://ruby.taobao.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;淘宝提供RubyGem&lt;/a&gt;，所以我们只需要替换下镜像的地址即可。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ gem sources &lt;span class=&quot;operator&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#列出镜像地址,默认是 https://rubygems.org/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ gem sources --remove https://rubygems.org/ &lt;span class=&quot;comment&quot;&gt;#将其移除&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ gem sources &lt;span class=&quot;operator&quot;&gt;-a&lt;/span&gt; https://ruby.taobao.org/ &lt;span class=&quot;comment&quot;&gt;#添加新的源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ gem sources &lt;span class=&quot;operator&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#可以查看是否已经添加成功了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;再次执行安装命令，通关了～&lt;br&gt;接下来执行&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ pod setup &lt;span class=&quot;comment&quot;&gt;#官方没有这一步，我看的其他博客，不知道缺少这一步会怎样&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在执行这一步时，我等了半个小时都没什么反应，还以为是卡死了，Google下来发现这是安装了一个什么包，大概有700M上下，所以最好耐心一点。&lt;/p&gt;
&lt;p&gt;。。。。。。&lt;/p&gt;
&lt;h2 id=&quot;项目初始化&quot;&gt;&lt;a href=&quot;#项目初始化&quot; class=&quot;headerlink&quot; title=&quot;项目初始化&quot;&gt;&lt;/a&gt;项目初始化&lt;/h2&gt;&lt;p&gt;安装好了之后，进入到想使用Cocoapods的项目根目录，执行&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ pod init &lt;span class=&quot;comment&quot;&gt;#比较标准的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该命令会创建一个名为 Podfile 的文件，大概长这样：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;platform :ios, &lt;span class=&quot;string&quot;&gt;&#39;8.0&#39;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#指定运行平台&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#use_frameworks! #如果使用swift的话就取消该注释&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;target &lt;span class=&quot;string&quot;&gt;&#39;MyApp&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#&#39;MyApp&#39;是你的项目名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  pod &lt;span class=&quot;string&quot;&gt;&#39;AFNetworking&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;~&amp;gt; 2.6&#39;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#引入一个库就要新建一个条目，后面指定的版本号不是必须的，默认安装最新版，但是估计有时候会有特殊需求&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当然你也可以手工创建一个Podfile文件，当然如果你不按照以上格式来的话肯定会报错，我最初就根据一个视频的步骤直接写了最核心的那一条&lt;code&gt;pod &amp;#39;AFNetworking&amp;#39;&lt;/code&gt;，然后就跳坑了，保存文件当然不会提示你有什么错误，但是后面就会了。以上，根据自己的需求编辑保存好Podfile，执行：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ pod install &lt;span class=&quot;comment&quot;&gt;#在项目中安装你引入的三方依赖&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该命令会读取刚才的Podfile文件，然后将你需要的依赖安装好，此时你的项目目录会多出来几个陌生的文件，不用管它，我们只需要记住之前打开工程文件是 xx.xcodeproj，而现在和以后都请打开刚才生成的 xx.xcworkspace工程文件。&lt;/p&gt;
&lt;h2 id=&quot;在项目中引入库文件&quot;&gt;&lt;a href=&quot;#在项目中引入库文件&quot; class=&quot;headerlink&quot; title=&quot;在项目中引入库文件&quot;&gt;&lt;/a&gt;在项目中引入库文件&lt;/h2&gt;&lt;p&gt;这个需要看你使用的第三方库而定，比如我使用了SDWebImage，就用如下代码引入&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#import &lt;span class=&quot;title&quot;&gt;&amp;lt;SDWebImage/UIImageView+WebCache.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当然，不同的库肯定不一样，关于你使用的库，在CocoaPods的官网搜索库名，里面会详细介绍该库用法以及API。&lt;/p&gt;
&lt;h2 id=&quot;移除CocoaPods&quot;&gt;&lt;a href=&quot;#移除CocoaPods&quot; class=&quot;headerlink&quot; title=&quot;移除CocoaPods&quot;&gt;&lt;/a&gt;移除CocoaPods&lt;/h2&gt;&lt;p&gt;如果后来不想在项目中使用 CocoPods 了，怎么办呢?&lt;br&gt;&lt;code&gt;pod --help&lt;/code&gt; 查看帮助发现有个参数&lt;code&gt;deintegrate&lt;/code&gt;，后面介绍说&lt;code&gt;Deintegrate CocoaPods from your project&lt;/code&gt;，大意就是取消项目中集成的CocoaPods，执行&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ pod deintegrate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通过终端打印结果可以看出，它从项目中移除了好些东西，但是还有文件没有删除干净，比如Podfile.lock和Pods文件夹以及工程文件xx.xcworkspace，删除之，个人觉得之前创建的Podfile还是先备份一下，万一后悔了呢！！！&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://cocoapods.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CocoaPods官网&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/wayne23/p/3912882.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/wayne23/p/3912882.html&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/ea36b56bb17b&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/ea36b56bb17b&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.cocoachina.com/bbs/read.php?tid=1682495&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cocoachina.com/bbs/read.php?tid=1682495&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;简单记录一下最近在项目中使用 CocoaPods 遇到的问题和解决办法&lt;/p&gt;
&lt;h2 id=&quot;What’s-it&quot;&gt;&lt;a href=&quot;#What’s-it&quot; class=&quot;headerlink&quot; title=&quot;What’s it&quot;&gt;&lt;/a&gt;What’s it&lt;/h2&gt;&lt;b
    
    </summary>
    
      <category term="tech" scheme="http://archmee.github.io/categories/tech/"/>
    
    
      <category term="CocoaPods" scheme="http://archmee.github.io/tags/CocoaPods/"/>
    
      <category term="iOS" scheme="http://archmee.github.io/tags/iOS/"/>
    
  </entry>
  
</feed>
